{"ast":null,"code":"import { Injectable, NgModule, Pipe } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nclass Ng2SearchPipe {\n  /**\n   * @param {?} items object from array\n   * @param {?} term term's search\n   * @return {?}\n   */\n  transform(items, term) {\n    if (!term || !items) return items;\n    return Ng2SearchPipe.filter(items, term);\n  }\n  /**\n   *\n   * @param {?} items List of items to filter\n   * @param {?} term  a string term to compare with every property of the list\n   *\n   * @return {?}\n   */\n  static filter(items, term) {\n    const /** @type {?} */toCompare = term.toLowerCase();\n    /**\n     * @param {?} item\n     * @param {?} term\n     * @return {?}\n     */\n    function checkInside(item, term) {\n      for (let /** @type {?} */property in item) {\n        if (item[property] === null || item[property] == undefined) {\n          continue;\n        }\n        if (typeof item[property] === 'object') {\n          if (checkInside(item[property], term)) {\n            return true;\n          }\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return items.filter(function (item) {\n      return checkInside(item, term);\n    });\n  }\n}\nNg2SearchPipe.ɵfac = function Ng2SearchPipe_Factory(t) {\n  return new (t || Ng2SearchPipe)();\n};\nNg2SearchPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: Ng2SearchPipe,\n  pure: false\n});\nNg2SearchPipe.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: Ng2SearchPipe,\n  factory: Ng2SearchPipe.ɵfac\n});\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'filter',\n      pure: false\n    }]\n  }, {\n    type: Injectable\n  }], null, null);\n})();\nclass Ng2SearchPipeModule {}\nNg2SearchPipeModule.ɵfac = function Ng2SearchPipeModule_Factory(t) {\n  return new (t || Ng2SearchPipeModule)();\n};\nNg2SearchPipeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: Ng2SearchPipeModule\n});\nNg2SearchPipeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [Ng2SearchPipe],\n      exports: [Ng2SearchPipe]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SearchPipeModule, {\n    declarations: [Ng2SearchPipe],\n    exports: [Ng2SearchPipe]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };","map":{"version":3,"names":["Injectable","NgModule","Pipe","ɵngcc0","Ng2SearchPipe","transform","items","term","filter","toCompare","toLowerCase","checkInside","item","property","undefined","toString","includes","ɵfac","Ng2SearchPipe_Factory","t","ɵpipe","ɵɵdefinePipe","name","type","pure","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","ngDevMode","ɵsetClassMetadata","args","Ng2SearchPipeModule","Ng2SearchPipeModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["F:/Plantillas/template/node_modules/ng2-search-filter/__ivy_ngcc__/ng2-search-filter.js"],"sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass Ng2SearchPipe {\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    transform(items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    static filter(items, term) {\n        const /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (let /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNg2SearchPipe.ɵfac = function Ng2SearchPipe_Factory(t) { return new (t || Ng2SearchPipe)(); };\nNg2SearchPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"filter\", type: Ng2SearchPipe, pure: false });\nNg2SearchPipe.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Ng2SearchPipe, factory: Ng2SearchPipe.ɵfac });\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'filter',\n                pure: false\n            }]\n    }, {\n        type: Injectable\n    }], null, null); })();\n\nclass Ng2SearchPipeModule {\n}\nNg2SearchPipeModule.ɵfac = function Ng2SearchPipeModule_Factory(t) { return new (t || Ng2SearchPipeModule)(); };\nNg2SearchPipeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: Ng2SearchPipeModule });\nNg2SearchPipeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SearchPipeModule, { declarations: [Ng2SearchPipe], exports: [Ng2SearchPipe] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}