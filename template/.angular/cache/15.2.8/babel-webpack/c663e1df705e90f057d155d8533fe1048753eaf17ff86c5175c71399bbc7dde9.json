{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nexports.defaultThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n  if (config === void 0) {\n    config = exports.defaultThrottleConfig;\n  }\n  return function (source) {\n    return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n  };\n}\nexports.throttle = throttle;\nvar ThrottleOperator = function () {\n  function ThrottleOperator(durationSelector, leading, trailing) {\n    this.durationSelector = durationSelector;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n  ThrottleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n  };\n  return ThrottleOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = function (_super) {\n  __extends(ThrottleSubscriber, _super);\n  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n    _super.call(this, destination);\n    this.destination = destination;\n    this.durationSelector = durationSelector;\n    this._leading = _leading;\n    this._trailing = _trailing;\n    this._hasTrailingValue = false;\n  }\n  ThrottleSubscriber.prototype._next = function (value) {\n    if (this.throttled) {\n      if (this._trailing) {\n        this._hasTrailingValue = true;\n        this._trailingValue = value;\n      }\n    } else {\n      var duration = this.tryDurationSelector(value);\n      if (duration) {\n        this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n      }\n      if (this._leading) {\n        this.destination.next(value);\n        if (this._trailing) {\n          this._hasTrailingValue = true;\n          this._trailingValue = value;\n        }\n      }\n    }\n  };\n  ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  };\n  /** @deprecated internal use only */\n  ThrottleSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n      throttled = _a.throttled,\n      _trailingValue = _a._trailingValue,\n      _hasTrailingValue = _a._hasTrailingValue,\n      _trailing = _a._trailing;\n    this._trailingValue = null;\n    this._hasTrailingValue = false;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  };\n  ThrottleSubscriber.prototype._sendTrailing = function () {\n    var _a = this,\n      destination = _a.destination,\n      throttled = _a.throttled,\n      _trailing = _a._trailing,\n      _trailingValue = _a._trailingValue,\n      _hasTrailingValue = _a._hasTrailingValue;\n    if (throttled && _trailing && _hasTrailingValue) {\n      destination.next(_trailingValue);\n      this._trailingValue = null;\n      this._hasTrailingValue = false;\n    }\n  };\n  ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this._sendTrailing();\n    this._unsubscribe();\n  };\n  ThrottleSubscriber.prototype.notifyComplete = function () {\n    this._sendTrailing();\n    this._unsubscribe();\n  };\n  return ThrottleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","OuterSubscriber_1","require","subscribeToResult_1","exports","defaultThrottleConfig","leading","trailing","throttle","durationSelector","config","source","lift","ThrottleOperator","call","subscriber","subscribe","ThrottleSubscriber","_super","destination","_leading","_trailing","_hasTrailingValue","_next","value","throttled","_trailingValue","duration","tryDurationSelector","add","subscribeToResult","next","err","error","_unsubscribe","_a","remove","unsubscribe","_sendTrailing","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyComplete","OuterSubscriber"],"sources":["F:/Plantillas/template/node_modules/ng5-slider/node_modules/rxjs/operators/throttle.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nexports.defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n    if (config === void 0) { config = exports.defaultThrottleConfig; }\n    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };\n}\nexports.throttle = throttle;\nvar ThrottleOperator = (function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = (function (_super) {\n    __extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasTrailingValue = false;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this._trailing) {\n                this._hasTrailingValue = true;\n                this._trailingValue = value;\n            }\n        }\n        else {\n            var duration = this.tryDurationSelector(value);\n            if (duration) {\n                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n            }\n            if (this._leading) {\n                this.destination.next(value);\n                if (this._trailing) {\n                    this._hasTrailingValue = true;\n                    this._trailingValue = value;\n                }\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    /** @deprecated internal use only */ ThrottleSubscriber.prototype._unsubscribe = function () {\n        var _a = this, throttled = _a.throttled, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue, _trailing = _a._trailing;\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n    };\n    ThrottleSubscriber.prototype._sendTrailing = function () {\n        var _a = this, destination = _a.destination, throttled = _a.throttled, _trailing = _a._trailing, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue;\n        if (throttled && _trailing && _hasTrailingValue) {\n            destination.next(_trailingValue);\n            this._trailingValue = null;\n            this._hasTrailingValue = false;\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}