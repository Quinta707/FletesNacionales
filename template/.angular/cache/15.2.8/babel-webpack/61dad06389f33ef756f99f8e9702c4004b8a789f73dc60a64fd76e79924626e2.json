{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { BarChart, LineChart, PieChart } from 'chartist';\n\n/**\n * Angular component which renders Chartist chart.\n *\n * See Chartist {@link https://gionkunz.github.io/chartist-js/api-documentation.html API documentation} and\n * {@link https://gionkunz.github.io/chartist-js/examples.html examples} for more information.\n * ### Example\n ```html\n <x-chartist\n   [configuration]=\"configuration\"\n   [events]=\"events\"\n ></x-chartist>\n ```\n */\nclass ChartistComponent {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    /**\n     * Event emitted after Chartist chart has been initialized.\n     *\n     * Event handler function will receive chart instance argument.\n     */\n    this.initialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this.configuration.type && this.configuration.data) {\n      this.renderChart();\n    }\n  }\n  ngOnChanges(changes) {\n    this.update(changes);\n  }\n  ngOnDestroy() {\n    if (this.chart) {\n      this.chart.detach();\n      this.chart = null;\n    }\n  }\n  renderChart() {\n    const nativeElement = this.elementRef.nativeElement;\n    const {\n      type,\n      data,\n      options,\n      responsiveOptions\n    } = this.configuration;\n    if (type === \"Bar\") {\n      this.chart = new BarChart(nativeElement, data, options, responsiveOptions);\n    } else if (type === \"Line\") {\n      this.chart = new LineChart(nativeElement, data, options, responsiveOptions);\n    } else if (type === \"Pie\") {\n      this.chart = new PieChart(nativeElement, data, options, responsiveOptions);\n    } else {\n      throw new Error(`${type} is not a known chart type`);\n    }\n    if (this.events) {\n      this.bindEvents();\n    }\n    this.initialized.emit(this.chart);\n  }\n  update(changes) {\n    const {\n      type,\n      data,\n      options\n    } = this.configuration;\n    if (!type || !data) {\n      return;\n    }\n    const changedConfiguration = changes.configuration.currentValue;\n    if (!this.chart || changedConfiguration.type !== type) {\n      this.renderChart();\n    } else if (\"data\" in changedConfiguration || \"options\" in changedConfiguration) {\n      this.chart.update(data, options);\n    }\n  }\n  bindEvents() {\n    for (const event of Object.keys(this.events)) {\n      this.chart.on(event, this.events[event]);\n    }\n  }\n}\nChartistComponent.ɵfac = function ChartistComponent_Factory(t) {\n  return new (t || ChartistComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nChartistComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChartistComponent,\n  selectors: [[\"x-chartist\"]],\n  inputs: {\n    configuration: \"configuration\",\n    events: \"events\"\n  },\n  outputs: {\n    initialized: \"initialized\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function ChartistComponent_Template(rf, ctx) {},\n  styles: [\"[_nghost-%COMP%]{display:block}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartistComponent, [{\n    type: Component,\n    args: [{\n      selector: \"x-chartist\",\n      template: \"\",\n      styles: [\":host{display:block}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    configuration: [{\n      type: Input\n    }],\n    events: [{\n      type: Input\n    }],\n    initialized: [{\n      type: Output\n    }]\n  });\n})();\nclass ChartistModule {}\nChartistModule.ɵfac = function ChartistModule_Factory(t) {\n  return new (t || ChartistModule)();\n};\nChartistModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChartistModule\n});\nChartistModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartistModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ChartistComponent],\n      exports: [ChartistComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-chartist-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartistComponent, ChartistModule };","map":{"version":3,"names":["i0","EventEmitter","Component","Input","Output","NgModule","BarChart","LineChart","PieChart","ChartistComponent","constructor","elementRef","initialized","ngOnInit","configuration","type","data","renderChart","ngOnChanges","changes","update","ngOnDestroy","chart","detach","nativeElement","options","responsiveOptions","Error","events","bindEvents","emit","changedConfiguration","currentValue","event","Object","keys","on","ɵfac","ElementRef","ɵcmp","args","selector","template","styles","ChartistModule","ɵmod","ɵinj","declarations","exports"],"sources":["C:/Users/Sarai Quintanilla/Documents/GitHub/FletesNacionales/template/node_modules/ng-chartist/fesm2020/ng-chartist.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { BarChart, LineChart, PieChart } from 'chartist';\n\n/**\n * Angular component which renders Chartist chart.\n *\n * See Chartist {@link https://gionkunz.github.io/chartist-js/api-documentation.html API documentation} and\n * {@link https://gionkunz.github.io/chartist-js/examples.html examples} for more information.\n * ### Example\n ```html\n <x-chartist\n   [configuration]=\"configuration\"\n   [events]=\"events\"\n ></x-chartist>\n ```\n */\nclass ChartistComponent {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        /**\n         * Event emitted after Chartist chart has been initialized.\n         *\n         * Event handler function will receive chart instance argument.\n         */\n        this.initialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this.configuration.type && this.configuration.data) {\n            this.renderChart();\n        }\n    }\n    ngOnChanges(changes) {\n        this.update(changes);\n    }\n    ngOnDestroy() {\n        if (this.chart) {\n            this.chart.detach();\n            this.chart = null;\n        }\n    }\n    renderChart() {\n        const nativeElement = this.elementRef.nativeElement;\n        const { type, data, options, responsiveOptions } = this.configuration;\n        if (type === \"Bar\") {\n            this.chart = new BarChart(nativeElement, data, options, responsiveOptions);\n        }\n        else if (type === \"Line\") {\n            this.chart = new LineChart(nativeElement, data, options, responsiveOptions);\n        }\n        else if (type === \"Pie\") {\n            this.chart = new PieChart(nativeElement, data, options, responsiveOptions);\n        }\n        else {\n            throw new Error(`${type} is not a known chart type`);\n        }\n        if (this.events) {\n            this.bindEvents();\n        }\n        this.initialized.emit(this.chart);\n    }\n    update(changes) {\n        const { type, data, options } = this.configuration;\n        if (!type || !data) {\n            return;\n        }\n        const changedConfiguration = changes.configuration\n            .currentValue;\n        if (!this.chart || changedConfiguration.type !== type) {\n            this.renderChart();\n        }\n        else if (\"data\" in changedConfiguration ||\n            \"options\" in changedConfiguration) {\n            this.chart.update(data, options);\n        }\n    }\n    bindEvents() {\n        for (const event of Object.keys(this.events)) {\n            this.chart.on(event, this.events[event]);\n        }\n    }\n}\nChartistComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.8\", ngImport: i0, type: ChartistComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nChartistComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.8\", type: ChartistComponent, selector: \"x-chartist\", inputs: { configuration: \"configuration\", events: \"events\" }, outputs: { initialized: \"initialized\" }, usesOnChanges: true, ngImport: i0, template: \"\", isInline: true, styles: [\":host{display:block}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.8\", ngImport: i0, type: ChartistComponent, decorators: [{\n            type: Component,\n            args: [{ selector: \"x-chartist\", template: \"\", styles: [\":host{display:block}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { configuration: [{\n                type: Input\n            }], events: [{\n                type: Input\n            }], initialized: [{\n                type: Output\n            }] } });\n\nclass ChartistModule {\n}\nChartistModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.8\", ngImport: i0, type: ChartistModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChartistModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.8\", ngImport: i0, type: ChartistModule, declarations: [ChartistComponent], exports: [ChartistComponent] });\nChartistModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.8\", ngImport: i0, type: ChartistModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.8\", ngImport: i0, type: ChartistModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ChartistComponent],\n                    exports: [ChartistComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-chartist-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartistComponent, ChartistModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}