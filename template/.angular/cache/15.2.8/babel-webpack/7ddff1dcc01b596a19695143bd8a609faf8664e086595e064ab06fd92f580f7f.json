{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i - 0] = arguments[_i];\n  }\n  return function (source) {\n    var project;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    var observables = args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\nexports.withLatestFrom = withLatestFrom;\nvar WithLatestFromOperator = function () {\n  function WithLatestFromOperator(observables, project) {\n    this.observables = observables;\n    this.project = project;\n  }\n  WithLatestFromOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  };\n  return WithLatestFromOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = function (_super) {\n  __extends(WithLatestFromSubscriber, _super);\n  function WithLatestFromSubscriber(destination, observables, project) {\n    _super.call(this, destination);\n    this.observables = observables;\n    this.project = project;\n    this.toRespond = [];\n    var len = observables.length;\n    this.values = new Array(len);\n    for (var i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n    for (var i = 0; i < len; i++) {\n      var observable = observables[i];\n      this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n    }\n  }\n  WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.values[outerIndex] = innerValue;\n    var toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      var found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  };\n  WithLatestFromSubscriber.prototype.notifyComplete = function () {\n    // noop\n  };\n  WithLatestFromSubscriber.prototype._next = function (value) {\n    if (this.toRespond.length === 0) {\n      var args = [value].concat(this.values);\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  };\n  WithLatestFromSubscriber.prototype._tryProject = function (args) {\n    var result;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  };\n  return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","OuterSubscriber_1","require","subscribeToResult_1","withLatestFrom","args","_i","arguments","length","source","project","pop","observables","lift","WithLatestFromOperator","exports","call","subscriber","subscribe","WithLatestFromSubscriber","_super","destination","toRespond","len","values","Array","i","push","observable","add","subscribeToResult","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","found","indexOf","splice","notifyComplete","_next","value","concat","_tryProject","next","result","apply","err","error","OuterSubscriber"],"sources":["F:/Plantillas/template/node_modules/ng5-slider/node_modules/rxjs/operators/withLatestFrom.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nexports.withLatestFrom = withLatestFrom;\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}