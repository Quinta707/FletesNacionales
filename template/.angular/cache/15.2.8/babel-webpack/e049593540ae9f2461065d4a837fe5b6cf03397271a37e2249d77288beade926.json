{"ast":null,"code":"import { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../../../../shared/components/breadcrumb/breadcrumb.component\";\nimport * as i3 from \"@angular/common\";\nfunction PopoverComponent_ng_template_101_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵelementStart(1, \"b\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"!\");\n  }\n  if (rf & 2) {\n    const greeting_r14 = ctx.greeting;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\"\", greeting_r14, \", \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.name);\n  }\n}\nfunction PopoverComponent_ng_template_103_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const language_r15 = ctx.language;\n    i0.ɵɵtextInterpolate1(\"Greeting in \", language_r15, \"\");\n  }\n}\nfunction PopoverComponent_ng_template_151_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Hello, \");\n    i0.ɵɵelementStart(1, \"b\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"!\");\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r11.name);\n  }\n}\nfunction PopoverComponent_ng_template_153_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Fancy \");\n    i0.ɵɵelementStart(1, \"b\");\n    i0.ɵɵtext(2, \"content!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"Bonus UI\", \"Base\"];\n};\nexport class PopoverComponent {\n  constructor(config) {\n    this.name = 'World';\n    // customize default values of popovers used by this component tree\n    config.placement = 'top';\n    config.triggers = 'click';\n  }\n  ngOnInit() {}\n  //Tooltip greeting on click as well as hover\n  toggleWithGreeting(popover, greeting, language) {\n    if (popover.isOpen()) {\n      popover.close();\n    } else {\n      popover.open({\n        greeting,\n        language\n      });\n    }\n  }\n  recordShown() {\n    this.lastShown = new Date();\n  }\n  recordHidden() {\n    this.lastHidden = new Date();\n  }\n}\nPopoverComponent.ɵfac = function PopoverComponent_Factory(t) {\n  return new (t || PopoverComponent)(i0.ɵɵdirectiveInject(i1.NgbPopoverConfig));\n};\nPopoverComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PopoverComponent,\n  selectors: [[\"app-popover\"]],\n  features: [i0.ɵɵProvidersFeature([NgbPopoverConfig] // add NgbPopoverConfig to the component providers\n  )],\n  decls: 157,\n  vars: 25,\n  consts: [[3, \"title\", \"items\", \"active_item\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-sm-12\", \"col-xl-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\", \"btn-showcase\", \"popover-mr\"], [\"type\", \"button\", \"placement\", \"top\", \"ngbPopover\", \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\", \"popoverTitle\", \"Popover on top\", 1, \"btn\", \"btn-outline-primary\"], [\"type\", \"button\", \"placement\", \"right\", \"ngbPopover\", \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\", \"popoverTitle\", \"Popover on right\", 1, \"btn\", \"btn-outline-primary\"], [\"type\", \"button\", \"placement\", \"bottom\", \"ngbPopover\", \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\", \"popoverTitle\", \"Popover on bottom\", 1, \"btn\", \"btn-outline-primary\"], [\"type\", \"button\", \"placement\", \"left\", \"ngbPopover\", \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\", \"popoverTitle\", \"Popover on left\", 1, \"btn\", \"btn-outline-primary\"], [1, \"card-body\"], [\"type\", \"button\", \"ngbPopover\", \"This popover gets its inputs from the customized configuration\", \"popoverTitle\", \"Customized popover\", 1, \"btn\", \"btn-outline-primary\"], [\"type\", \"button\", \"ngbPopover\", \"You see, I show up on hover!\", \"triggers\", \"mouseenter:mouseleave\", \"popoverTitle\", \"Pop title\", 1, \"btn\", \"btn-outline-primary\"], [1, \"btn-showcase\"], [\"type\", \"button\", \"ngbPopover\", \"What a great tip!\", \"triggers\", \"manual\", \"popoverTitle\", \"Pop title\", 1, \"btn\", \"btn-outline-primary\", \"me-2\", 3, \"autoClose\", \"click\"], [\"p\", \"ngbPopover\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"click\"], [1, \"mb-2\"], [\"type\", \"button\", \"popoverTitle\", \"Pop title\", \"ngbPopover\", \"Click inside or press Escape to close\", 1, \"btn\", \"btn-outline-primary\", 3, \"autoClose\"], [\"type\", \"button\", \"popoverTitle\", \"Pop title\", \"ngbPopover\", \"Click outside or press Escape to close\", 1, \"btn\", \"btn-outline-primary\", 3, \"autoClose\"], [1, \"btn-showcase\", \"d-inline-block\"], [\"type\", \"button\", \"popoverTitle\", \"Pop title\", \"ngbPopover\", \"Click anywhere or press Escape to close (try the toggling element too)\", 1, \"btn\", \"btn-outline-primary\", \"me-0\", 3, \"autoClose\"], [\"popover3\", \"ngbPopover\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"me-0\", \"btn-xs-eplisis\", 3, \"click\"], [\"type\", \"button\", \"ngbPopover\", \"Nice class!\", \"popoverClass\", \"my-custom-class\", 1, \"btn\", \"btn-outline-primary\"], [\"popContent\", \"\"], [\"popTitle\", \"\"], [\"type\", \"button\", \"triggers\", \"manual\", 1, \"btn\", \"btn-outline-primary\", \"me-2\", 3, \"ngbPopover\", \"popoverTitle\", \"click\"], [\"p1\", \"ngbPopover\"], [\"p2\", \"ngbPopover\"], [\"p3\", \"ngbPopover\"], [\"type\", \"button\", \"placement\", \"top\", \"ngbPopover\", \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\", \"popoverTitle\", \"Popover on top\", 1, \"btn\", \"btn-outline-primary\", 3, \"shown\", \"hidden\"], [\"popover\", \"ngbPopover\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"btn-xs-eplisis\", 3, \"ngbPopover\", \"popoverTitle\"]],\n  template: function PopoverComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r16 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"app-breadcrumb\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\");\n      i0.ɵɵtext(7, \"Quick and easy popovers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"button\", 7);\n      i0.ɵɵtext(10, \" Popover on top \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 8);\n      i0.ɵɵtext(12, \" Popover on right \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 9);\n      i0.ɵɵtext(14, \" Popover on bottom \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 10);\n      i0.ɵɵtext(16, \" Popover on left \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"div\", 4)(19, \"div\", 5)(20, \"h5\");\n      i0.ɵɵtext(21, \"Global configuration of popovers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 11)(23, \"button\", 12);\n      i0.ɵɵtext(24, \" Customized popover \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(25, \"div\", 3)(26, \"div\", 4)(27, \"div\", 5)(28, \"h5\");\n      i0.ɵɵtext(29, \"Custom and manual triggers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 11)(31, \"p\");\n      i0.ɵɵtext(32, \" You can easily override open and close triggers by specifying event names (separated by \");\n      i0.ɵɵelementStart(33, \"code\");\n      i0.ɵɵtext(34, \":\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \") in the \");\n      i0.ɵɵelementStart(36, \"code\");\n      i0.ɵɵtext(37, \"triggers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(38, \" property. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 13);\n      i0.ɵɵtext(40, \" Hover over me! \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"hr\");\n      i0.ɵɵelementStart(42, \"p\");\n      i0.ɵɵtext(43, \" Alternatively you can take full manual control over popover opening / closing events. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"div\", 14)(45, \"button\", 15, 16);\n      i0.ɵɵlistener(\"click\", function PopoverComponent_Template_button_click_45_listener() {\n        i0.ɵɵrestoreView(_r16);\n        const _r0 = i0.ɵɵreference(46);\n        return i0.ɵɵresetView(_r0.open());\n      });\n      i0.ɵɵtext(47, \" Click me to open a popover \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function PopoverComponent_Template_button_click_48_listener() {\n        i0.ɵɵrestoreView(_r16);\n        const _r0 = i0.ɵɵreference(46);\n        return i0.ɵɵresetView(_r0.close());\n      });\n      i0.ɵɵtext(49, \" Click me to close a popover \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(50, \"div\", 3)(51, \"div\", 4)(52, \"div\", 5)(53, \"h5\");\n      i0.ɵɵtext(54, \"Automatic closing with keyboard and mouse\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(55, \"div\", 11)(56, \"p\");\n      i0.ɵɵtext(57, \"As for some other popup-based widgets, you can set the popover to close automatically upon some events.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"p\");\n      i0.ɵɵtext(59, \"In the following examples, they will all close on \");\n      i0.ɵɵelementStart(60, \"code\");\n      i0.ɵɵtext(61, \"Escape\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(62, \" as well as:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"ul\")(64, \"li\", 18);\n      i0.ɵɵtext(65, \" click inside: \");\n      i0.ɵɵelementStart(66, \"button\", 19);\n      i0.ɵɵtext(67, \" Click to toggle \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(68, \"li\", 18);\n      i0.ɵɵtext(69, \" click outside: \");\n      i0.ɵɵelementStart(70, \"button\", 20);\n      i0.ɵɵtext(71, \" Click to toggle \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(72, \"li\");\n      i0.ɵɵtext(73, \" all clicks: \");\n      i0.ɵɵelementStart(74, \"div\", 21)(75, \"button\", 22, 23);\n      i0.ɵɵtext(77, \" Click to toggle \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(78, \" \\u00A0 \");\n      i0.ɵɵelementStart(79, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function PopoverComponent_Template_button_click_79_listener() {\n        i0.ɵɵrestoreView(_r16);\n        const _r1 = i0.ɵɵreference(76);\n        return i0.ɵɵresetView(_r1.toggle());\n      });\n      i0.ɵɵtext(80, \" Click to toggle the external popover \");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelementStart(81, \"div\", 3)(82, \"div\", 4)(83, \"div\", 5)(84, \"h5\");\n      i0.ɵɵtext(85, \"Popover with custom class\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(86, \"div\", 11)(87, \"p\");\n      i0.ɵɵtext(88, \" You can optionally pass in a custom class via \");\n      i0.ɵɵelementStart(89, \"code\");\n      i0.ɵɵtext(90, \"popoverClass\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(91, \"button\", 25);\n      i0.ɵɵtext(92, \" Popover with custom class \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(93, \"div\", 3)(94, \"div\", 4)(95, \"div\", 5)(96, \"h5\");\n      i0.ɵɵtext(97, \"Context and manual triggers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(98, \"div\", 11)(99, \"p\");\n      i0.ɵɵtext(100, \" You can optionally pass in a context when manually triggering a popover. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(101, PopoverComponent_ng_template_101_Template, 4, 2, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(103, PopoverComponent_ng_template_103_Template, 1, 1, \"ng-template\", null, 27, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(105, \"div\", 14)(106, \"button\", 28, 29);\n      i0.ɵɵlistener(\"click\", function PopoverComponent_Template_button_click_106_listener() {\n        i0.ɵɵrestoreView(_r16);\n        const _r6 = i0.ɵɵreference(107);\n        return i0.ɵɵresetView(ctx.toggleWithGreeting(_r6, \"Bonjour\", \"French\"));\n      });\n      i0.ɵɵtext(108, \" French \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(109, \"button\", 28, 30);\n      i0.ɵɵlistener(\"click\", function PopoverComponent_Template_button_click_109_listener() {\n        i0.ɵɵrestoreView(_r16);\n        const _r7 = i0.ɵɵreference(110);\n        return i0.ɵɵresetView(ctx.toggleWithGreeting(_r7, \"Gutentag\", \"German\"));\n      });\n      i0.ɵɵtext(111, \" German \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(112, \"button\", 28, 31);\n      i0.ɵɵlistener(\"click\", function PopoverComponent_Template_button_click_112_listener() {\n        i0.ɵɵrestoreView(_r16);\n        const _r8 = i0.ɵɵreference(113);\n        return i0.ɵɵresetView(ctx.toggleWithGreeting(_r8, \"Hello\", \"English\"));\n      });\n      i0.ɵɵtext(114, \" English \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(115, \"div\", 3)(116, \"div\", 4)(117, \"div\", 5)(118, \"h5\");\n      i0.ɵɵtext(119, \"Popover visibility events\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(120, \"div\", 11)(121, \"button\", 32, 33);\n      i0.ɵɵlistener(\"shown\", function PopoverComponent_Template_button_shown_121_listener() {\n        return ctx.recordShown();\n      })(\"hidden\", function PopoverComponent_Template_button_hidden_121_listener() {\n        return ctx.recordHidden();\n      });\n      i0.ɵɵtext(123, \" Open Popover \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(124, \"hr\");\n      i0.ɵɵelementStart(125, \"ul\")(126, \"li\");\n      i0.ɵɵtext(127, \"Popover is currently: \");\n      i0.ɵɵelementStart(128, \"code\");\n      i0.ɵɵtext(129);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(130, \"li\");\n      i0.ɵɵtext(131, \"Last shown at: \");\n      i0.ɵɵelementStart(132, \"code\");\n      i0.ɵɵtext(133);\n      i0.ɵɵpipe(134, \"date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(135, \"li\");\n      i0.ɵɵtext(136, \"Last hidden at: \");\n      i0.ɵɵelementStart(137, \"code\");\n      i0.ɵɵtext(138);\n      i0.ɵɵpipe(139, \"date\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(140, \"div\", 3)(141, \"div\", 4)(142, \"div\", 5)(143, \"h5\");\n      i0.ɵɵtext(144, \"HTML and bindings in popovers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(145, \"div\", 11)(146, \"p\");\n      i0.ɵɵtext(147, \" Popovers can contain any arbitrary HTML, Angular bindings and even directives! Simply enclose desired content or title in a \");\n      i0.ɵɵelementStart(148, \"code\");\n      i0.ɵɵtext(149, \"<ng-template>\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(150, \" element. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(151, PopoverComponent_ng_template_151_Template, 4, 1, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(153, PopoverComponent_ng_template_153_Template, 3, 0, \"ng-template\", null, 27, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(155, \"button\", 34);\n      i0.ɵɵtext(156, \" I've got markup and bindings in my popover! \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(102);\n      const _r4 = i0.ɵɵreference(104);\n      const _r9 = i0.ɵɵreference(122);\n      i0.ɵɵproperty(\"title\", \"Popover\")(\"items\", i0.ɵɵpureFunction0(24, _c0))(\"active_item\", \"Popover\");\n      i0.ɵɵadvance(45);\n      i0.ɵɵproperty(\"autoClose\", false);\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"autoClose\", \"inside\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"autoClose\", \"outside\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"autoClose\", true);\n      i0.ɵɵadvance(31);\n      i0.ɵɵproperty(\"ngbPopover\", _r2)(\"popoverTitle\", _r4);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngbPopover\", _r2)(\"popoverTitle\", _r4);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngbPopover\", _r2)(\"popoverTitle\", _r4);\n      i0.ɵɵadvance(17);\n      i0.ɵɵtextInterpolate(_r9.isOpen() ? \"open\" : \"closed\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(134, 18, ctx.lastShown, \"h:mm:ss\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(139, 21, ctx.lastHidden, \"h:mm:ss\"));\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngbPopover\", _r2)(\"popoverTitle\", _r4);\n    }\n  },\n  dependencies: [i1.NgbPopover, i2.BreadcrumbComponent, i3.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["NgbPopoverConfig","i0","PopoverComponent","constructor","config","placement","triggers","ngOnInit","toggleWithGreeting","popover","greeting","language","isOpen","close","open","recordShown","lastShown","Date","recordHidden","lastHidden","selectors","features","ctx"],"sourceRoot":"","sources":["F:\\Plantillas\\template\\src\\app\\components\\bonus-ui\\base\\popover\\popover.component.ts","F:\\Plantillas\\template\\src\\app\\components\\bonus-ui\\base\\popover\\popover.component.html"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-popover',\n  templateUrl: './popover.component.html',\n  styleUrls: ['./popover.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [NgbPopoverConfig] // add NgbPopoverConfig to the component providers\n})\nexport class PopoverComponent implements OnInit {\n\n  name = 'World';\n  lastShown: Date;\n  lastHidden: Date;\n\n  constructor(config: NgbPopoverConfig) {\n    // customize default values of popovers used by this component tree\n    config.placement = 'top';\n    config.triggers = 'click';\n  }\n\n  ngOnInit() {  }\n\n  //Tooltip greeting on click as well as hover\n  toggleWithGreeting(popover, greeting: string, language: string) {\n    if (popover.isOpen()) {\n      popover.close();\n    } else {\n      popover.open({ greeting, language });\n    }\n  }\n\n  recordShown() {\n    this.lastShown = new Date();\n  }\n\n  recordHidden() {\n    this.lastHidden = new Date();\n  }\n\n}\n","<app-breadcrumb [title]=\"'Popover'\" [items]=\"['Bonus UI', 'Base']\" [active_item]=\"'Popover'\"></app-breadcrumb>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Quick and easy popovers</h5>\n        </div>\n        <div class=\"card-body btn-showcase popover-mr\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" placement=\"top\"\n            ngbPopover=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\" popoverTitle=\"Popover on top\">\n            Popover on top\n          </button>\n\n          <button type=\"button\" class=\"btn btn-outline-primary\" placement=\"right\"\n            ngbPopover=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\" popoverTitle=\"Popover on right\">\n            Popover on right\n          </button>\n\n          <button type=\"button\" class=\"btn btn-outline-primary\" placement=\"bottom\"\n            ngbPopover=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\" popoverTitle=\"Popover on bottom\">\n            Popover on bottom\n          </button>\n\n          <button type=\"button\" class=\"btn btn-outline-primary\" placement=\"left\"\n            ngbPopover=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\" popoverTitle=\"Popover on left\">\n            Popover on left\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Global configuration of popovers</h5>\n        </div>\n        <div class=\"card-body\">\n          <button type=\"button\" class=\"btn btn-outline-primary\"\n            ngbPopover=\"This popover gets its inputs from the customized configuration\"\n            popoverTitle=\"Customized popover\">\n            Customized popover\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Custom and manual triggers</h5>\n        </div>\n        <div class=\"card-body\">\n          <p>\n            You can easily override open and close triggers by specifying event names (separated by <code>:</code>) in\n            the <code>triggers</code> property.\n          </p>\n          <button type=\"button\" class=\"btn btn-outline-primary\" ngbPopover=\"You see, I show up on hover!\"\n            triggers=\"mouseenter:mouseleave\" popoverTitle=\"Pop title\">\n            Hover over me!\n          </button>\n          <hr>\n          <p>\n            Alternatively you can take full manual control over popover opening / closing events.\n          </p>\n          <div class=\"btn-showcase\">\n            <button type=\"button\" class=\"btn btn-outline-primary me-2\" ngbPopover=\"What a great tip!\"\n              [autoClose]=\"false\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\" popoverTitle=\"Pop title\">\n              Click me to open a popover\n            </button>\n            <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"p.close()\">\n              Click me to close a popover\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Automatic closing with keyboard and mouse</h5>\n        </div>\n        <div class=\"card-body\">\n          <p>As for some other popup-based widgets, you can set the popover to close automatically upon some events.</p>\n          <p>In the following examples, they will all close on <code>Escape</code> as well as:</p>\n          <ul>\n            <li class=\"mb-2\">\n              click inside:\n              <button type=\"button\" class=\"btn btn-outline-primary\" popoverTitle=\"Pop title\" [autoClose]=\"'inside'\"\n                ngbPopover=\"Click inside or press Escape to close\">\n                Click to toggle\n              </button>\n            </li>\n            <li class=\"mb-2\">\n              click outside:\n              <button type=\"button\" class=\"btn btn-outline-primary\" popoverTitle=\"Pop title\" [autoClose]=\"'outside'\"\n                ngbPopover=\"Click outside or press Escape to close\">\n                Click to toggle\n              </button>\n            </li>\n            <li>\n              all clicks:\n              <div class=\"btn-showcase d-inline-block\">\n                <button type=\"button\" class=\"btn btn-outline-primary me-0\" popoverTitle=\"Pop title\" [autoClose]=\"true\"\n                  ngbPopover=\"Click anywhere or press Escape to close (try the toggling element too)\"\n                  #popover3=\"ngbPopover\">\n                  Click to toggle\n                </button>\n                &nbsp;\n                <button type=\"button\" class=\"btn btn-outline-primary me-0 btn-xs-eplisis\" (click)=\"popover3.toggle()\">\n                  Click to toggle the external popover\n                </button>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Popover with custom class</h5>\n        </div>\n        <div class=\"card-body\">\n          <p>\n            You can optionally pass in a custom class via <code>popoverClass</code>\n          </p>\n          <button type=\"button\" class=\"btn btn-outline-primary\" ngbPopover=\"Nice class!\" popoverClass=\"my-custom-class\">\n            Popover with custom class\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Context and manual triggers</h5>\n        </div>\n        <div class=\"card-body\">\n          <p>\n            You can optionally pass in a context when manually triggering a popover.\n          </p>\n          <ng-template #popContent let-greeting=\"greeting\">{{greeting}}, <b>{{name}}</b>!</ng-template>\n          <ng-template #popTitle let-language=\"language\">Greeting in {{language}}</ng-template>\n          <div class=\"btn-showcase\">\n            <button type=\"button\" class=\"btn btn-outline-primary me-2\" [ngbPopover]=\"popContent\"\n              [popoverTitle]=\"popTitle\" triggers=\"manual\" #p1=\"ngbPopover\"\n              (click)=\"toggleWithGreeting(p1, 'Bonjour', 'French')\">\n              French\n            </button>\n            <button type=\"button\" class=\"btn btn-outline-primary me-2\" [ngbPopover]=\"popContent\"\n              [popoverTitle]=\"popTitle\" triggers=\"manual\" #p2=\"ngbPopover\"\n              (click)=\"toggleWithGreeting(p2, 'Gutentag', 'German')\">\n              German\n            </button>\n            <button type=\"button\" class=\"btn btn-outline-primary me-2\" [ngbPopover]=\"popContent\"\n              [popoverTitle]=\"popTitle\" triggers=\"manual\" #p3=\"ngbPopover\"\n              (click)=\"toggleWithGreeting(p3, 'Hello', 'English')\">\n              English\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Popover visibility events</h5>\n        </div>\n        <div class=\"card-body\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" placement=\"top\"\n            ngbPopover=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\" popoverTitle=\"Popover on top\"\n            #popover=\"ngbPopover\" (shown)=\"recordShown()\" (hidden)=\"recordHidden()\">\n            Open Popover\n          </button>\n          <hr>\n          <ul>\n            <li>Popover is currently: <code>{{ popover.isOpen() ? 'open' : 'closed' }}</code></li>\n            <li>Last shown at: <code>{{lastShown | date:'h:mm:ss'}}</code></li>\n            <li>Last hidden at: <code>{{lastHidden | date:'h:mm:ss'}}</code></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>HTML and bindings in popovers</h5>\n        </div>\n        <div class=\"card-body\">\n          <p>\n            Popovers can contain any arbitrary HTML, Angular bindings and even directives!\n            Simply enclose desired content or title in a <code>&lt;ng-template&gt;</code> element.\n          </p>\n          <ng-template #popContent>Hello, <b>{{name}}</b>!</ng-template>\n          <ng-template #popTitle>Fancy <b>content!!</b></ng-template>\n          <button type=\"button\" class=\"btn btn-outline-primary btn-xs-eplisis\" [ngbPopover]=\"popContent\"\n            [popoverTitle]=\"popTitle\">\n            I've got markup and bindings in my popover!\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}