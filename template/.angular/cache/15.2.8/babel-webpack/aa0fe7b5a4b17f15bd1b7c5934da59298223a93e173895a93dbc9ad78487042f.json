{"ast":null,"code":"import * as chartData from '../../../shared/data/chart/chartjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nimport * as i2 from \"../../../shared/components/breadcrumb/breadcrumb.component\";\nconst _c0 = function () {\n  return [\"Chart\"];\n};\nexport class ChartjsComponent {\n  constructor() {\n    // barChart\n    this.barChartOptions = chartData.barChartOptions;\n    this.barChartLabels = chartData.barChartLabels;\n    this.barChartType = chartData.barChartType;\n    this.barChartLegend = chartData.barChartLegend;\n    this.barChartData = chartData.barChartData;\n    this.barChartColors = chartData.barChartColors;\n    // lineGraph Chart\n    this.lineGraphOptions = chartData.lineGraphOptions;\n    this.lineGraphLabels = chartData.lineGraphLabels;\n    this.lineGraphType = chartData.lineGraphType;\n    this.lineGraphLegend = chartData.lineGraphLegend;\n    this.lineGraphData = chartData.lineGraphData;\n    this.lineGraphColors = chartData.lineGraphColors;\n    // radarGraph Chart\n    this.radarGraphOptions = chartData.radarGraphOptions;\n    this.radarGraphLabels = chartData.radarGraphLabels;\n    this.radarGraphType = chartData.radarGraphType;\n    this.radarGraphLegend = chartData.radarGraphLegend;\n    this.radarGraphData = chartData.radarGraphData;\n    this.radarGraphColors = chartData.radarGraphColors;\n    // lineChart\n    this.lineChartData = chartData.lineChartData;\n    this.lineChartLabels = chartData.lineChartLabels;\n    this.lineChartOptions = chartData.lineChartOptions;\n    this.lineChartColors = chartData.lineChartColors;\n    this.lineChartLegend = chartData.lineChartLegend;\n    this.lineChartType = chartData.lineChartType;\n    // Doughnut\n    this.doughnutChartLabels = chartData.doughnutChartLabels;\n    this.doughnutChartData = chartData.doughnutChartData;\n    this.doughnutChartType = chartData.doughnutChartType;\n    this.doughnutChartColors = chartData.doughnutChartColors;\n    this.doughnutChartOptions = chartData.doughnutChartOptions;\n    // PolarArea\n    // public polarAreaChartLabels = chartData.polarAreaChartLabels;\n    // public polarAreaChartData = chartData.polarAreaChartData;\n    // public polarAreaLegend = chartData.polarAreaLegend;\n    // public ploarChartColors = chartData.ploarChartColors;\n    // public polarAreaChartType = chartData.polarAreaChartType;\n    // public polarChartOptions = chartData.polarChartOptions;\n    this.polarAreaChartLabels = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n    this.polarAreaChartData = [\"300\", \"500\", \"100\", \"40\", \"120\"];\n    this.polarAreaLegend = true;\n    this.polarAreaChartType = 'polarArea';\n  }\n  // events\n  chartClicked({\n    event,\n    active\n  }) {}\n  chartHovered({\n    event,\n    active\n  }) {}\n}\nChartjsComponent.ɵfac = function ChartjsComponent_Factory(t) {\n  return new (t || ChartjsComponent)();\n};\nChartjsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChartjsComponent,\n  selectors: [[\"app-chartjs\"]],\n  decls: 31,\n  vars: 24,\n  consts: [[3, \"title\", \"items\", \"active_item\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-xl-6\", \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\", \"chart-block\"], [\"baseChart\", \"\", 1, \"chart\", 3, \"datasets\", \"labels\", \"options\", \"legend\", \"type\", \"chartHover\", \"chartClick\"], [1, \"col-xl-4\", \"col-md-12\"], [1, \"col-xl-8\", \"col-md-12\"]],\n  template: function ChartjsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-breadcrumb\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\");\n      i0.ɵɵtext(7, \"Bar Chart\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"canvas\", 7);\n      i0.ɵɵlistener(\"chartHover\", function ChartjsComponent_Template_canvas_chartHover_9_listener($event) {\n        return ctx.chartHovered($event);\n      })(\"chartClick\", function ChartjsComponent_Template_canvas_chartClick_9_listener($event) {\n        return ctx.chartClicked($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"div\", 4)(12, \"div\", 5)(13, \"h5\");\n      i0.ɵɵtext(14, \"Line Graph\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"canvas\", 7);\n      i0.ɵɵlistener(\"chartHover\", function ChartjsComponent_Template_canvas_chartHover_16_listener($event) {\n        return ctx.chartHovered($event);\n      })(\"chartClick\", function ChartjsComponent_Template_canvas_chartClick_16_listener($event) {\n        return ctx.chartClicked($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(17, \"div\", 8)(18, \"div\", 4)(19, \"div\", 5)(20, \"h5\");\n      i0.ɵɵtext(21, \"Radar Graph\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 6)(23, \"canvas\", 7);\n      i0.ɵɵlistener(\"chartHover\", function ChartjsComponent_Template_canvas_chartHover_23_listener($event) {\n        return ctx.chartHovered($event);\n      })(\"chartClick\", function ChartjsComponent_Template_canvas_chartClick_23_listener($event) {\n        return ctx.chartClicked($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(24, \"div\", 9)(25, \"div\", 4)(26, \"div\", 5)(27, \"h5\");\n      i0.ɵɵtext(28, \"Line Chart\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 6)(30, \"canvas\", 7);\n      i0.ɵɵlistener(\"chartHover\", function ChartjsComponent_Template_canvas_chartHover_30_listener($event) {\n        return ctx.chartHovered($event);\n      })(\"chartClick\", function ChartjsComponent_Template_canvas_chartClick_30_listener($event) {\n        return ctx.chartClicked($event);\n      });\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"title\", \"Chartjs\")(\"items\", i0.ɵɵpureFunction0(23, _c0))(\"active_item\", \"Chartjs\");\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"datasets\", ctx.barChartData)(\"labels\", ctx.barChartLabels)(\"options\", ctx.barChartOptions)(\"legend\", ctx.barChartLegend)(\"type\", ctx.barChartType);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"datasets\", ctx.lineGraphData)(\"labels\", ctx.lineGraphLabels)(\"options\", ctx.lineGraphOptions)(\"legend\", ctx.lineGraphLegend)(\"type\", ctx.lineGraphType);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"datasets\", ctx.radarGraphData)(\"labels\", ctx.radarGraphLabels)(\"options\", ctx.radarGraphOptions)(\"legend\", ctx.radarGraphLegend)(\"type\", ctx.radarGraphType);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"datasets\", ctx.lineChartData)(\"labels\", ctx.lineChartLabels)(\"options\", ctx.lineChartOptions)(\"legend\", ctx.lineChartLegend)(\"type\", ctx.lineChartType);\n    }\n  },\n  dependencies: [i1.BaseChartDirective, i2.BreadcrumbComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["chartData","ChartjsComponent","constructor","barChartOptions","barChartLabels","barChartType","barChartLegend","barChartData","barChartColors","lineGraphOptions","lineGraphLabels","lineGraphType","lineGraphLegend","lineGraphData","lineGraphColors","radarGraphOptions","radarGraphLabels","radarGraphType","radarGraphLegend","radarGraphData","radarGraphColors","lineChartData","lineChartLabels","lineChartOptions","lineChartColors","lineChartLegend","lineChartType","doughnutChartLabels","doughnutChartData","doughnutChartType","doughnutChartColors","doughnutChartOptions","chartClicked","event","active","chartHovered","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\Plantillas\\template\\src\\app\\components\\charts\\chartjs\\chartjs.component.ts","F:\\Plantillas\\template\\src\\app\\components\\charts\\chartjs\\chartjs.component.html"],"sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\nimport { ChartType } from 'chart.js';\nimport * as chartData from '../../../shared/data/chart/chartjs';\n\n@Component({\n  selector: 'app-chartjs',\n  templateUrl: './chartjs.component.html',\n  styleUrls: ['./chartjs.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ChartjsComponent {\n\n  constructor() { }\n\n  // barChart\n  public barChartOptions = chartData.barChartOptions;\n  public barChartLabels = chartData.barChartLabels;\n  public barChartType = chartData.barChartType;\n  public barChartLegend = chartData.barChartLegend;\n  public barChartData = chartData.barChartData;\n  public barChartColors = chartData.barChartColors;\n\n  // lineGraph Chart\n  public lineGraphOptions = chartData.lineGraphOptions;\n  public lineGraphLabels = chartData.lineGraphLabels;\n  public lineGraphType = chartData.lineGraphType;\n  public lineGraphLegend = chartData.lineGraphLegend;\n  public lineGraphData = chartData.lineGraphData;\n  public lineGraphColors = chartData.lineGraphColors;\n\n  // radarGraph Chart\n  public radarGraphOptions = chartData.radarGraphOptions;\n  public radarGraphLabels = chartData.radarGraphLabels;\n  public radarGraphType = chartData.radarGraphType;\n  public radarGraphLegend = chartData.radarGraphLegend;\n  public radarGraphData = chartData.radarGraphData;\n  public radarGraphColors = chartData.radarGraphColors;\n\n  // lineChart\n  public lineChartData = chartData.lineChartData;\n  public lineChartLabels = chartData.lineChartLabels;\n  public lineChartOptions = chartData.lineChartOptions;\n  public lineChartColors = chartData.lineChartColors;\n  public lineChartLegend = chartData.lineChartLegend;\n  public lineChartType = chartData.lineChartType;\n\n  // Doughnut\n  public doughnutChartLabels = chartData.doughnutChartLabels;\n  public doughnutChartData = chartData.doughnutChartData;\n  public doughnutChartType = chartData.doughnutChartType;\n  public doughnutChartColors = chartData.doughnutChartColors;\n  public doughnutChartOptions = chartData.doughnutChartOptions;\n\n  // PolarArea\n  // public polarAreaChartLabels = chartData.polarAreaChartLabels;\n  // public polarAreaChartData = chartData.polarAreaChartData;\n  // public polarAreaLegend = chartData.polarAreaLegend;\n  // public ploarChartColors = chartData.ploarChartColors;\n  // public polarAreaChartType = chartData.polarAreaChartType;\n  // public polarChartOptions = chartData.polarChartOptions;\n\n  public polarAreaChartLabels: String[] = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n  public polarAreaChartData: String[] = [\"300\", \"500\", \"100\", \"40\", \"120\"];\n  public polarAreaLegend = true;\n\n  public polarAreaChartType: ChartType = 'polarArea';\n\n  // events\n\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n  }\n\n\n}\n","<app-breadcrumb [title]=\"'Chartjs'\" [items]=\"['Chart']\" [active_item]=\"'Chartjs'\"></app-breadcrumb>\n<!-- Container-fluid starts -->\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-xl-6 col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h5>Bar Chart</h5>\n                </div>\n                <div class=\"card-body chart-block\">\n                    <canvas baseChart class=\"chart\" [datasets]=\"barChartData\" [labels]=\"barChartLabels\"\n                        [options]=\"barChartOptions\"  [legend]=\"barChartLegend\"\n                        [type]=\"barChartType\" (chartHover)=\"chartHovered($event)\"\n                        (chartClick)=\"chartClicked($event)\"></canvas>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-6 col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h5>Line Graph</h5>\n                </div>\n                <div class=\"card-body chart-block\">\n                    <canvas baseChart class=\"chart\" [datasets]=\"lineGraphData\" [labels]=\"lineGraphLabels\"\n                        [options]=\"lineGraphOptions\"  [legend]=\"lineGraphLegend\"\n                        [type]=\"lineGraphType\" (chartHover)=\"chartHovered($event)\"\n                        (chartClick)=\"chartClicked($event)\"></canvas>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-4 col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h5>Radar Graph</h5>\n                </div>\n                <div class=\"card-body chart-block\" >\n                    <canvas baseChart class=\"chart\" [datasets]=\"radarGraphData\" [labels]=\"radarGraphLabels\"\n                        [options]=\"radarGraphOptions\"  [legend]=\"radarGraphLegend\"\n                        [type]=\"radarGraphType\" (chartHover)=\"chartHovered($event)\"\n                        (chartClick)=\"chartClicked($event)\"></canvas>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-8 col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h5>Line Chart</h5>\n                </div>\n                <div class=\"card-body chart-block\">\n                    <canvas baseChart class=\"chart\" [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\"\n                        [options]=\"lineChartOptions\" [legend]=\"lineChartLegend\"\n                        [type]=\"lineChartType\" (chartHover)=\"chartHovered($event)\"\n                        (chartClick)=\"chartClicked($event)\"></canvas>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Container-fluid Ends -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}