{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MustMatch } from '../../../../shared/validators/passwordMatch';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i5 from \"angular-archwizard\";\nimport * as i6 from \"../../../../shared/components/breadcrumb/breadcrumb.component\";\nimport * as i7 from \"../../../../shared/directives/only-alphabets.directive\";\nimport * as i8 from \"../../../../shared/directives/only-numbers.directive\";\nfunction FormWizardComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" First Name is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction FormWizardComponent_ng_container_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" Last Name is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_ng_container_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" Contact is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_ng_container_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" Email is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_ng_container_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" Email is not Proper\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_ng_container_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" Password is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_div_46_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" Confirm Password is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_div_46_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" Passwords Doesnt match\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"label\", 23);\n    i0.ɵɵtext(2, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 41);\n    i0.ɵɵtemplate(4, FormWizardComponent_div_46_ng_container_4_Template, 2, 0, \"ng-container\", 13);\n    i0.ɵɵtemplate(5, FormWizardComponent_div_46_ng_container_5_Template, 2, 0, \"ng-container\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.secondFormGroup.get(\"cnfPassword\").hasError(\"required\") && ctx_r7.secondFormGroup.get(\"cnfPassword\").touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.secondFormGroup.get(\"cnfPassword\").hasError(\"mustMatch\") && ctx_r7.secondFormGroup.get(\"cnfPassword\").touched);\n  }\n}\nfunction FormWizardComponent_ng_container_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" Birth Date is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_ng_container_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" Passport field is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_ng_container_78_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" Country is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_ng_container_83_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" State is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FormWizardComponent_ng_container_88_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 40);\n    i0.ɵɵtext(1, \" City is required\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"Forms\", \"Form Layout\"];\n};\nexport class FormWizardComponent {\n  constructor(_formBuilder, toaster) {\n    this._formBuilder = _formBuilder;\n    this.toaster = toaster;\n    this.maxDate = new Date();\n  }\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      contactNumber: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      cnfPassword: ['', Validators.required]\n    }, {\n      validator: MustMatch('password', 'cnfPassword')\n    });\n    this.thirdFormGroup = this._formBuilder.group({\n      birthdate: ['', Validators.required],\n      age: [''],\n      hasPassport: ['', Validators.required]\n    });\n    this.fourthFormGroup = this._formBuilder.group({\n      country: ['', Validators.required],\n      state: ['', Validators.required],\n      city: ['', Validators.required]\n    });\n  }\n  finish() {\n    this.toaster.success('Successfully Registered');\n  }\n}\nFormWizardComponent.ɵfac = function FormWizardComponent_Factory(t) {\n  return new (t || FormWizardComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\nFormWizardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormWizardComponent,\n  selectors: [[\"app-form-wizard\"]],\n  decls: 93,\n  vars: 25,\n  consts: [[3, \"title\", \"items\", \"active_item\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"id\", \"regForm\", 1, \"form-wizard\"], [3, \"disableNavigationBar\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"placeholder\", \"Johan\", \"required\", \"required\", \"formControlName\", \"firstName\", \"onlyAlphabets\", \"\", 1, \"form-control\"], [\"class\", \"invalid\", 4, \"ngIf\"], [4, \"ngIf\"], [\"for\", \"lname\"], [\"id\", \"lname\", \"type\", \"text\", \"placeholder\", \"Deo\", \"formControlName\", \"lastName\", \"onlyAlphabets\", \"\", 1, \"form-control\"], [\"for\", \"contact\"], [\"id\", \"contact\", \"type\", \"text\", \"placeholder\", \"123456789\", \"formControlName\", \"contactNumber\", \"onlyNumbers\", \"\", 1, \"form-control\", \"digits\"], [\"type\", \"submit\", \"awNextStep\", \"\", 1, \"btn\", \"btn-primary\", \"pull-right\", 3, \"disabled\"], [1, \"mb-3\", \"m-t-15\"], [\"for\", \"exampleFormControlInput1\"], [\"id\", \"exampleFormControlInput1\", \"type\", \"email\", \"placeholder\", \"name@example.com\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\"], [\"id\", \"exampleInputPassword1\", \"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"class\", \"mb-3\", 4, \"ngIf\"], [\"type\", \"button\", \"awNextStep\", \"\", 1, \"btn\", \"btn-primary\", \"pull-right\", 3, \"disabled\"], [\"type\", \"button\", \"awPreviousStep\", \"\", 1, \"btn\", \"btn-secondary\", \"pull-right\", \"me-1\"], [1, \"mb-3\", \"custom-datepicker-dropdown\", \"custom-datepicker\"], [\"type\", \"text\", \"formControlName\", \"birthdate\", \"ngbDatepicker\", \"\", 1, \"form-control\", \"digits\", 3, \"maxDate\", \"click\"], [\"dob\", \"ngbDatepicker\"], [1, \"control-label\"], [\"placeholder\", \"Age\", \"type\", \"text\", \"formControlName\", \"age\", 1, \"form-control\", \"digits\"], [\"placeholder\", \"Yes/No\", \"type\", \"text\", \"formControlName\", \"hasPassport\", 1, \"form-control\", \"digits\"], [\"type\", \"button\", \"awNextStep\", \"\", 1, \"btn\", \"btn-primary\", \"pull-right\"], [\"awEnableBackLinks\", \"\"], [\"type\", \"text\", \"placeholder\", \"Country\", \"required\", \"required\", \"formControlName\", \"country\", 1, \"form-control\", \"mt-1\"], [\"type\", \"text\", \"placeholder\", \"State\", \"required\", \"required\", \"formControlName\", \"state\", 1, \"form-control\", \"mt-1\"], [\"type\", \"text\", \"placeholder\", \"City\", \"required\", \"required\", \"formControlName\", \"city\", 1, \"form-control\", \"mt-1\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"pull-right\", 3, \"disabled\", \"click\"], [1, \"invalid\"], [\"id\", \"exampleInputcPassword1\", \"type\", \"password\", \"placeholder\", \"Enter again\", \"formControlName\", \"cnfPassword\", 1, \"form-control\"]],\n  template: function FormWizardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r16 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"app-breadcrumb\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\");\n      i0.ɵɵtext(7, \"Simple Form Wizard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"span\");\n      i0.ɵɵtext(9, \"Please Make sure fill all the filed before click on next button\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"form\", 7)(12, \"aw-wizard\", 8)(13, \"aw-wizard-step\")(14, \"form\", 9)(15, \"div\", 10)(16, \"label\", 11);\n      i0.ɵɵtext(17, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 12);\n      i0.ɵɵtemplate(19, FormWizardComponent_ng_container_19_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, FormWizardComponent_div_20_Template, 1, 0, \"div\", 14);\n      i0.ɵɵelementStart(21, \"div\", 10)(22, \"label\", 15);\n      i0.ɵɵtext(23, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 16);\n      i0.ɵɵtemplate(25, FormWizardComponent_ng_container_25_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 10)(27, \"label\", 17);\n      i0.ɵɵtext(28, \"Contact No.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 18);\n      i0.ɵɵtemplate(30, FormWizardComponent_ng_container_30_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"button\", 19);\n      i0.ɵɵtext(32, \"Next\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"aw-wizard-step\")(34, \"form\", 9)(35, \"div\", 20)(36, \"label\", 21);\n      i0.ɵɵtext(37, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 22);\n      i0.ɵɵtemplate(39, FormWizardComponent_ng_container_39_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵtemplate(40, FormWizardComponent_ng_container_40_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 10)(42, \"label\", 23);\n      i0.ɵɵtext(43, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 24);\n      i0.ɵɵtemplate(45, FormWizardComponent_ng_container_45_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(46, FormWizardComponent_div_46_Template, 6, 2, \"div\", 25);\n      i0.ɵɵelementStart(47, \"button\", 26);\n      i0.ɵɵtext(48, \"Next\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"button\", 27);\n      i0.ɵɵtext(50, \"Previous\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(51, \"aw-wizard-step\")(52, \"form\", 9)(53, \"div\", 28)(54, \"label\", 21);\n      i0.ɵɵtext(55, \"Birthday:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"input\", 29, 30);\n      i0.ɵɵlistener(\"click\", function FormWizardComponent_Template_input_click_56_listener() {\n        i0.ɵɵrestoreView(_r16);\n        const _r8 = i0.ɵɵreference(57);\n        return i0.ɵɵresetView(_r8.toggle());\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(58, FormWizardComponent_ng_container_58_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"div\", 10)(60, \"label\", 31);\n      i0.ɵɵtext(61, \"Age\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(62, \"input\", 32);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"div\", 10)(64, \"label\", 31);\n      i0.ɵɵtext(65, \"Have Passport\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(66, \"input\", 33);\n      i0.ɵɵtemplate(67, FormWizardComponent_ng_container_67_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"button\", 34);\n      i0.ɵɵtext(69, \"Next\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"button\", 27);\n      i0.ɵɵtext(71, \"Previous\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(72, \"aw-wizard-completion-step\", 35)(73, \"form\", 9)(74, \"div\", 10)(75, \"label\", 31);\n      i0.ɵɵtext(76, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(77, \"input\", 36);\n      i0.ɵɵtemplate(78, FormWizardComponent_ng_container_78_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(79, \"div\", 10)(80, \"label\", 31);\n      i0.ɵɵtext(81, \"State\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(82, \"input\", 37);\n      i0.ɵɵtemplate(83, FormWizardComponent_ng_container_83_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(84, \"div\", 10)(85, \"label\", 31);\n      i0.ɵɵtext(86, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(87, \"input\", 38);\n      i0.ɵɵtemplate(88, FormWizardComponent_ng_container_88_Template, 2, 0, \"ng-container\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(89, \"button\", 39);\n      i0.ɵɵlistener(\"click\", function FormWizardComponent_Template_button_click_89_listener() {\n        return ctx.finish();\n      });\n      i0.ɵɵtext(90, \"Finish\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(91, \"button\", 27);\n      i0.ɵɵtext(92, \"Previous\");\n      i0.ɵɵelementEnd()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"title\", \"Form Wizard\")(\"items\", i0.ɵɵpureFunction0(24, _c0))(\"active_item\", \"Form Wizard\");\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"disableNavigationBar\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.firstFormGroup);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.firstFormGroup.get(\"firstName\").hasError(\"required\") && ctx.firstFormGroup.get(\"firstName\").touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.firstFormGroup.get(\"lastName\").hasError(\"required\") && ctx.firstFormGroup.get(\"lastName\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.firstFormGroup.get(\"contactNumber\").hasError(\"required\") && ctx.firstFormGroup.get(\"contactNumber\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.firstFormGroup.valid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.secondFormGroup);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.secondFormGroup.get(\"email\").hasError(\"required\") && ctx.secondFormGroup.get(\"email\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.secondFormGroup.get(\"email\").hasError(\"email\") && ctx.secondFormGroup.get(\"email\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.secondFormGroup.get(\"password\").hasError(\"required\") && ctx.secondFormGroup.get(\"password\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.secondFormGroup.get(\"password\").valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.secondFormGroup.valid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.thirdFormGroup);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"maxDate\", ctx.maxDate);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.thirdFormGroup.get(\"birthdate\").hasError(\"required\") && ctx.thirdFormGroup.get(\"birthdate\").touched);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.thirdFormGroup.get(\"hasPassport\").hasError(\"required\") && ctx.thirdFormGroup.get(\"hasPassport\").touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.fourthFormGroup);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.fourthFormGroup.get(\"country\").hasError(\"required\") && ctx.fourthFormGroup.get(\"country\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.fourthFormGroup.get(\"state\").hasError(\"required\") && ctx.fourthFormGroup.get(\"state\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.fourthFormGroup.get(\"city\").hasError(\"required\") && ctx.fourthFormGroup.get(\"city\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.fourthFormGroup.valid);\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgForm, i1.FormGroupDirective, i1.FormControlName, i4.NgbInputDatepicker, i5.WizardComponent, i5.WizardStepComponent, i5.WizardCompletionStepComponent, i5.NextStepDirective, i5.PreviousStepDirective, i5.EnableBackLinksDirective, i6.BreadcrumbComponent, i7.OnlyAlphabetsDirective, i8.OnlyNumbersDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormBuilder","Validators","ToastrService","MustMatch","i0","FormWizardComponent","constructor","_formBuilder","toaster","maxDate","Date","ngOnInit","firstFormGroup","group","firstName","required","lastName","contactNumber","secondFormGroup","email","password","cnfPassword","validator","thirdFormGroup","birthdate","age","hasPassport","fourthFormGroup","country","state","city","finish","success","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\Plantillas\\template\\src\\app\\components\\forms\\form-Layouts\\form-wizard\\form-wizard.component.ts","F:\\Plantillas\\template\\src\\app\\components\\forms\\form-Layouts\\form-wizard\\form-wizard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MustMatch } from '../../../../shared/validators/passwordMatch';\n\n@Component({\n  selector: 'app-form-wizard',\n  templateUrl: './form-wizard.component.html',\n  styleUrls: ['./form-wizard.component.scss']\n})\nexport class FormWizardComponent implements OnInit {\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  thirdFormGroup: FormGroup;\n  fourthFormGroup: FormGroup;\n  maxDate: Date;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private toaster: ToastrService\n  ) {\n    this.maxDate = new Date();\n  }\n\n\n  ngOnInit(): void {\n    this.firstFormGroup = this._formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      contactNumber: ['', Validators.required],\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      cnfPassword: ['', Validators.required],\n    },\n      {\n        validator: MustMatch('password', 'cnfPassword')\n      });\n    this.thirdFormGroup = this._formBuilder.group({\n      birthdate: ['', Validators.required],\n      age: [''],\n      hasPassport: ['', Validators.required],\n    })\n    this.fourthFormGroup = this._formBuilder.group({\n      country: ['', Validators.required],\n      state: ['', Validators.required],\n      city: ['', Validators.required],\n    })\n  }\n  public finish() {\n    this.toaster.success('Successfully Registered')\n  }\n\n\n\n}\n// [disabled]=\"!profileForm.valid\"","<app-breadcrumb [title]=\"'Form Wizard'\" [items]=\"['Forms', 'Form Layout']\" [active_item]=\"'Form Wizard'\"></app-breadcrumb>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Simple Form Wizard</h5><span>Please Make sure fill all the filed before click on next button</span>\n        </div>\n        <div class=\"card-body\">\n          <form class=\"form-wizard\" id=\"regForm\">\n            <aw-wizard [disableNavigationBar]='true'>\n              <aw-wizard-step>\n                <form [formGroup]=\"firstFormGroup\">\n                  <div class=\"mb-3\">\n                    <label for=\"name\">First Name</label>\n                    <input class=\"form-control\" id=\"name\" type=\"text\" placeholder=\"Johan\" required=\"required\"\n                      formControlName=\"firstName\" onlyAlphabets>\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"firstFormGroup.get('firstName').hasError('required') && firstFormGroup.get('firstName').touched\">\n                      First Name is required</ng-container>\n                  </div>\n                  <div *ngIf=\"\"></div>\n                  <div class=\"mb-3\">\n                    <label for=\"lname\">Last Name</label>\n                    <input class=\"form-control\" id=\"lname\" type=\"text\" placeholder=\"Deo\" formControlName=\"lastName\"\n                      onlyAlphabets>\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"firstFormGroup.get('lastName').hasError('required') && firstFormGroup.get('lastName').touched\">\n                      Last Name is required</ng-container>\n                  </div>\n                  <div class=\"mb-3\">\n                    <label for=\"contact\">Contact No.</label>\n                    <input class=\"form-control digits\" id=\"contact\" type=\"text\" placeholder=\"123456789\"\n                      formControlName=\"contactNumber\" onlyNumbers>\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"firstFormGroup.get('contactNumber').hasError('required') && firstFormGroup.get('contactNumber').touched\">\n                      Contact is required</ng-container>\n                  </div>\n                  <button class=\"btn btn-primary pull-right\" type=\"submit\" awNextStep\n                    [disabled]=\"!firstFormGroup.valid\">Next</button>\n                </form>\n              </aw-wizard-step>\n              <aw-wizard-step>\n                <form [formGroup]=\"secondFormGroup\">\n                  <div class=\"mb-3 m-t-15\">\n                    <label for=\"exampleFormControlInput1\">Email address</label>\n                    <input class=\"form-control\" id=\"exampleFormControlInput1\" type=\"email\"\n                      placeholder=\"name@example.com\" formControlName=\"email\">\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"secondFormGroup.get('email').hasError('required') && secondFormGroup.get('email').touched\">\n                      Email is required</ng-container>\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"secondFormGroup.get('email').hasError('email') && secondFormGroup.get('email').touched\">\n                      Email is not Proper</ng-container>\n                  </div>\n                  <div class=\"mb-3\">\n                    <label for=\"exampleInputPassword1\">Password</label>\n                    <input class=\"form-control\" id=\"exampleInputPassword1\" type=\"password\" placeholder=\"Password\"\n                      formControlName=\"password\">\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"secondFormGroup.get('password').hasError('required') && secondFormGroup.get('password').touched\">\n                      Password is required</ng-container>\n                  </div>\n                  <div class=\"mb-3\" *ngIf=\"secondFormGroup.get('password').valid\">\n                    <label for=\"exampleInputPassword1\">Confirm Password</label>\n                    <input class=\"form-control\" id=\"exampleInputcPassword1\" type=\"password\" placeholder=\"Enter again\"\n                      formControlName=\"cnfPassword\">\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"secondFormGroup.get('cnfPassword').hasError('required') && secondFormGroup.get('cnfPassword').touched\">\n                      Confirm Password is required</ng-container>\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"secondFormGroup.get('cnfPassword').hasError('mustMatch') && secondFormGroup.get('cnfPassword').touched\">\n                      Passwords Doesnt match</ng-container>\n                  </div>\n                  <button class=\"btn btn-primary pull-right\" type=\"button\" awNextStep\n                    [disabled]=\"!secondFormGroup.valid\">Next</button>\n                  <button class=\"btn btn-secondary pull-right me-1\" type=\"button\" awPreviousStep>Previous</button>\n                </form>\n              </aw-wizard-step>\n              <aw-wizard-step>\n                <form [formGroup]=\"thirdFormGroup\">\n                  <div class=\"mb-3 custom-datepicker-dropdown custom-datepicker\">\n                    <label for=\"exampleFormControlInput1\">Birthday:</label>\n                    <input class=\"form-control digits\" type=\"text\" formControlName=\"birthdate\" ngbDatepicker\n                      #dob=\"ngbDatepicker\" [maxDate]=\"maxDate\" (click)=\"dob.toggle()\">\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"thirdFormGroup.get('birthdate').hasError('required') && thirdFormGroup.get('birthdate').touched\">\n                      Birth Date is required</ng-container>\n                  </div>\n                  <div class=\"mb-3\">\n                    <label class=\"control-label\">Age</label>\n                    <input class=\"form-control digits\" placeholder=\"Age\" type=\"text\" formControlName=\"age\">\n                  </div>\n                  <div class=\"mb-3\">\n                    <label class=\"control-label\">Have Passport</label>\n                    <input class=\"form-control digits\" placeholder=\"Yes/No\" type=\"text\" formControlName=\"hasPassport\">\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"thirdFormGroup.get('hasPassport').hasError('required') && thirdFormGroup.get('hasPassport').touched\">\n                      Passport field is required</ng-container>\n                  </div>\n                  <button class=\"btn btn-primary pull-right\" type=\"button\" awNextStep>Next</button>\n                  <button class=\"btn btn-secondary pull-right me-1\" type=\"button\" awPreviousStep>Previous</button>\n                </form>\n              </aw-wizard-step>\n              <aw-wizard-completion-step awEnableBackLinks>\n                <form [formGroup]=\"fourthFormGroup\">\n                  <div class=\"mb-3\">\n                    <label class=\"control-label\">Country</label>\n                    <input class=\"form-control mt-1\" type=\"text\" placeholder=\"Country\" required=\"required\"\n                      formControlName=\"country\">\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"fourthFormGroup.get('country').hasError('required') && fourthFormGroup.get('country').touched\">\n                      Country is required</ng-container>\n                  </div>\n                  <div class=\"mb-3\">\n                    <label class=\"control-label\">State</label>\n                    <input class=\"form-control mt-1\" type=\"text\" placeholder=\"State\" required=\"required\"\n                      formControlName=\"state\">\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"fourthFormGroup.get('state').hasError('required') && fourthFormGroup.get('state').touched\">\n                      State is required</ng-container>\n                  </div>\n                  <div class=\"mb-3\">\n                    <label class=\"control-label\">City</label>\n                    <input class=\"form-control mt-1\" type=\"text\" placeholder=\"City\" required=\"required\"\n                      formControlName=\"city\">\n                    <ng-container class=\"invalid\"\n                      *ngIf=\"fourthFormGroup.get('city').hasError('required') && fourthFormGroup.get('city').touched\">\n                      City is required</ng-container>\n                  </div>\n                  <button class=\"btn btn-success pull-right\" type=\"button\" (click)=\"finish()\"\n                    [disabled]=\"!fourthFormGroup.valid\">Finish</button>\n                  <button class=\"btn btn-secondary pull-right me-1\" type=\"button\" awPreviousStep>Previous</button>\n                </form>\n              </aw-wizard-completion-step>\n            </aw-wizard>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}