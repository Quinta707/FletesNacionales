{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/areconnectedthroughproperties\n */\n\n/* globals console */\n\nimport getSubNodes from './getsubnodes';\n\n/**\n * Traverses both structures to find out whether there is a reference that is shared between both structures.\n *\n * @param {Object|Array} target1\n * @param {Object|Array} target2\n * @returns {Boolean}\n */\nexport default function areConnectedThroughProperties(target1, target2, excludedNodes = new Set()) {\n  if (target1 === target2 && isObject(target1)) {\n    return true;\n  }\n\n  // @if CK_DEBUG_WATCHDOG // return checkConnectionBetweenProps( target1, target2, excludedNodes );\n\n  const subNodes1 = getSubNodes(target1, excludedNodes);\n  const subNodes2 = getSubNodes(target2, excludedNodes);\n  for (const node of subNodes1) {\n    if (subNodes2.has(node)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/* istanbul ignore next */\n// eslint-disable-next-line\nfunction checkConnectionBetweenProps(target1, target2, excludedNodes) {\n  const {\n    subNodes: subNodes1,\n    prevNodeMap: prevNodeMap1\n  } = getSubNodes(target1, excludedNodes.subNodes);\n  const {\n    subNodes: subNodes2,\n    prevNodeMap: prevNodeMap2\n  } = getSubNodes(target2, excludedNodes.subNodes);\n  for (const sharedNode of subNodes1) {\n    if (subNodes2.has(sharedNode)) {\n      const connection = [];\n      connection.push(sharedNode);\n      let node = prevNodeMap1.get(sharedNode);\n      while (node && node !== target1) {\n        connection.push(node);\n        node = prevNodeMap1.get(node);\n      }\n      node = prevNodeMap2.get(sharedNode);\n      while (node && node !== target2) {\n        connection.unshift(node);\n        node = prevNodeMap2.get(node);\n      }\n      console.log('--------');\n      console.log({\n        target1\n      });\n      console.log({\n        sharedNode\n      });\n      console.log({\n        target2\n      });\n      console.log({\n        connection\n      });\n      return true;\n    }\n  }\n  return false;\n}\nfunction isObject(structure) {\n  return typeof structure === 'object' && structure !== null;\n}","map":{"version":3,"names":["getSubNodes","areConnectedThroughProperties","target1","target2","excludedNodes","Set","isObject","subNodes1","subNodes2","node","has","checkConnectionBetweenProps","subNodes","prevNodeMap","prevNodeMap1","prevNodeMap2","sharedNode","connection","push","get","unshift","console","log","structure"],"sources":["C:/Users/Sarai Quintanilla/Documents/GitHub/FletesNacionales/template/node_modules/@ckeditor/ckeditor5-watchdog/src/utils/areconnectedthroughproperties.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/areconnectedthroughproperties\n */\n\n/* globals console */\n\nimport getSubNodes from './getsubnodes';\n\n/**\n * Traverses both structures to find out whether there is a reference that is shared between both structures.\n *\n * @param {Object|Array} target1\n * @param {Object|Array} target2\n * @returns {Boolean}\n */\nexport default function areConnectedThroughProperties( target1, target2, excludedNodes = new Set() ) {\n\tif ( target1 === target2 && isObject( target1 ) ) {\n\t\treturn true;\n\t}\n\n\t// @if CK_DEBUG_WATCHDOG // return checkConnectionBetweenProps( target1, target2, excludedNodes );\n\n\tconst subNodes1 = getSubNodes( target1, excludedNodes );\n\tconst subNodes2 = getSubNodes( target2, excludedNodes );\n\n\tfor ( const node of subNodes1 ) {\n\t\tif ( subNodes2.has( node ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/* istanbul ignore next */\n// eslint-disable-next-line\nfunction checkConnectionBetweenProps( target1, target2, excludedNodes ) {\n\tconst { subNodes: subNodes1, prevNodeMap: prevNodeMap1 } = getSubNodes( target1, excludedNodes.subNodes );\n\tconst { subNodes: subNodes2, prevNodeMap: prevNodeMap2 } = getSubNodes( target2, excludedNodes.subNodes );\n\n\tfor ( const sharedNode of subNodes1 ) {\n\t\tif ( subNodes2.has( sharedNode ) ) {\n\t\t\tconst connection = [];\n\n\t\t\tconnection.push( sharedNode );\n\n\t\t\tlet node = prevNodeMap1.get( sharedNode );\n\n\t\t\twhile ( node && node !== target1 ) {\n\t\t\t\tconnection.push( node );\n\t\t\t\tnode = prevNodeMap1.get( node );\n\t\t\t}\n\n\t\t\tnode = prevNodeMap2.get( sharedNode );\n\n\t\t\twhile ( node && node !== target2 ) {\n\t\t\t\tconnection.unshift( node );\n\t\t\t\tnode = prevNodeMap2.get( node );\n\t\t\t}\n\n\t\t\tconsole.log( '--------' );\n\t\t\tconsole.log( { target1 } );\n\t\t\tconsole.log( { sharedNode } );\n\t\t\tconsole.log( { target2 } );\n\t\t\tconsole.log( { connection } );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction isObject( structure ) {\n\treturn typeof structure === 'object' && structure !== null;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,WAAW,MAAM,eAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,6BAA6B,CAAEC,OAAO,EAAEC,OAAO,EAAEC,aAAa,GAAG,IAAIC,GAAG,EAAE,EAAG;EACpG,IAAKH,OAAO,KAAKC,OAAO,IAAIG,QAAQ,CAAEJ,OAAO,CAAE,EAAG;IACjD,OAAO,IAAI;EACZ;;EAEA;;EAEA,MAAMK,SAAS,GAAGP,WAAW,CAAEE,OAAO,EAAEE,aAAa,CAAE;EACvD,MAAMI,SAAS,GAAGR,WAAW,CAAEG,OAAO,EAAEC,aAAa,CAAE;EAEvD,KAAM,MAAMK,IAAI,IAAIF,SAAS,EAAG;IAC/B,IAAKC,SAAS,CAACE,GAAG,CAAED,IAAI,CAAE,EAAG;MAC5B,OAAO,IAAI;IACZ;EACD;EAEA,OAAO,KAAK;AACb;;AAEA;AACA;AACA,SAASE,2BAA2B,CAAET,OAAO,EAAEC,OAAO,EAAEC,aAAa,EAAG;EACvE,MAAM;IAAEQ,QAAQ,EAAEL,SAAS;IAAEM,WAAW,EAAEC;EAAa,CAAC,GAAGd,WAAW,CAAEE,OAAO,EAAEE,aAAa,CAACQ,QAAQ,CAAE;EACzG,MAAM;IAAEA,QAAQ,EAAEJ,SAAS;IAAEK,WAAW,EAAEE;EAAa,CAAC,GAAGf,WAAW,CAAEG,OAAO,EAAEC,aAAa,CAACQ,QAAQ,CAAE;EAEzG,KAAM,MAAMI,UAAU,IAAIT,SAAS,EAAG;IACrC,IAAKC,SAAS,CAACE,GAAG,CAAEM,UAAU,CAAE,EAAG;MAClC,MAAMC,UAAU,GAAG,EAAE;MAErBA,UAAU,CAACC,IAAI,CAAEF,UAAU,CAAE;MAE7B,IAAIP,IAAI,GAAGK,YAAY,CAACK,GAAG,CAAEH,UAAU,CAAE;MAEzC,OAAQP,IAAI,IAAIA,IAAI,KAAKP,OAAO,EAAG;QAClCe,UAAU,CAACC,IAAI,CAAET,IAAI,CAAE;QACvBA,IAAI,GAAGK,YAAY,CAACK,GAAG,CAAEV,IAAI,CAAE;MAChC;MAEAA,IAAI,GAAGM,YAAY,CAACI,GAAG,CAAEH,UAAU,CAAE;MAErC,OAAQP,IAAI,IAAIA,IAAI,KAAKN,OAAO,EAAG;QAClCc,UAAU,CAACG,OAAO,CAAEX,IAAI,CAAE;QAC1BA,IAAI,GAAGM,YAAY,CAACI,GAAG,CAAEV,IAAI,CAAE;MAChC;MAEAY,OAAO,CAACC,GAAG,CAAE,UAAU,CAAE;MACzBD,OAAO,CAACC,GAAG,CAAE;QAAEpB;MAAQ,CAAC,CAAE;MAC1BmB,OAAO,CAACC,GAAG,CAAE;QAAEN;MAAW,CAAC,CAAE;MAC7BK,OAAO,CAACC,GAAG,CAAE;QAAEnB;MAAQ,CAAC,CAAE;MAC1BkB,OAAO,CAACC,GAAG,CAAE;QAAEL;MAAW,CAAC,CAAE;MAE7B,OAAO,IAAI;IACZ;EACD;EAEA,OAAO,KAAK;AACb;AAEA,SAASX,QAAQ,CAAEiB,SAAS,EAAG;EAC9B,OAAO,OAAOA,SAAS,KAAK,QAAQ,IAAIA,SAAS,KAAK,IAAI;AAC3D"},"metadata":{},"sourceType":"module","externalDependencies":[]}