{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n  return function (source) {\n    return source.lift(new DebounceOperator(durationSelector));\n  };\n}\nexports.debounce = debounce;\nvar DebounceOperator = function () {\n  function DebounceOperator(durationSelector) {\n    this.durationSelector = durationSelector;\n  }\n  DebounceOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  };\n  return DebounceOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = function (_super) {\n  __extends(DebounceSubscriber, _super);\n  function DebounceSubscriber(destination, durationSelector) {\n    _super.call(this, destination);\n    this.durationSelector = durationSelector;\n    this.hasValue = false;\n    this.durationSubscription = null;\n  }\n  DebounceSubscriber.prototype._next = function (value) {\n    try {\n      var result = this.durationSelector.call(this, value);\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n  DebounceSubscriber.prototype._complete = function () {\n    this.emitValue();\n    this.destination.complete();\n  };\n  DebounceSubscriber.prototype._tryNext = function (value, duration) {\n    var subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n    subscription = subscribeToResult_1.subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  };\n  DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.emitValue();\n  };\n  DebounceSubscriber.prototype.notifyComplete = function () {\n    this.emitValue();\n  };\n  DebounceSubscriber.prototype.emitValue = function () {\n    if (this.hasValue) {\n      var value = this.value;\n      var subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      _super.prototype._next.call(this, value);\n    }\n  };\n  return DebounceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","OuterSubscriber_1","require","subscribeToResult_1","debounce","durationSelector","source","lift","DebounceOperator","exports","call","subscriber","subscribe","DebounceSubscriber","_super","destination","hasValue","durationSubscription","_next","value","result","_tryNext","err","error","_complete","emitValue","complete","duration","subscription","unsubscribe","remove","subscribeToResult","closed","add","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyComplete","OuterSubscriber"],"sources":["F:/Plantillas/template/node_modules/ng5-slider/node_modules/rxjs/operators/debounce.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };\n}\nexports.debounce = debounce;\nvar DebounceOperator = (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = (function (_super) {\n    __extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n        this.durationSubscription = null;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult_1.subscribeToResult(this, duration);\n        if (!subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}