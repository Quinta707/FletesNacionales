{"ast":null,"code":"import { Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nclass CountToDirective {\n  /**\n   * @param {?} el\n   */\n  constructor(el) {\n    this.el = el;\n    this.from = 0;\n    this.duration = 4;\n    this.e = this.el.nativeElement;\n    this.refreshInterval = 30;\n    this.step = 0;\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {}\n  /**\n   * @return {?}\n   */\n  ngOnChanges() {\n    if (this.CountTo) {\n      this.start();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  calculate() {\n    this.duration = this.duration * 1000;\n    this.steps = Math.ceil(this.duration / this.refreshInterval);\n    this.increment = (this.CountTo - this.from) / this.steps;\n    this.num = this.from;\n  }\n  /**\n   * @return {?}\n   */\n  tick() {\n    setTimeout(() => {\n      this.num += this.increment;\n      this.step++;\n      if (this.step >= this.steps) {\n        this.num = this.CountTo;\n        this.e.textContent = this.CountTo;\n      } else {\n        this.e.textContent = Math.round(this.num);\n        this.tick();\n      }\n    }, this.refreshInterval);\n  }\n  /**\n   * @return {?}\n   */\n  start() {\n    this.calculate();\n    this.tick();\n  }\n}\nCountToDirective.ɵfac = function CountToDirective_Factory(t) {\n  return new (t || CountToDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nCountToDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CountToDirective,\n  selectors: [[\"\", \"CountTo\", \"\"]],\n  inputs: {\n    from: \"from\",\n    duration: \"duration\",\n    CountTo: \"CountTo\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/**\n * @nocollapse\n */\nCountToDirective.ctorParameters = () => [{\n  type: ElementRef\n}];\nCountToDirective.propDecorators = {\n  'CountTo': [{\n    type: Input\n  }],\n  'from': [{\n    type: Input\n  }],\n  'duration': [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CountToDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[CountTo]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    from: [{\n      type: Input\n    }],\n    duration: [{\n      type: Input\n    }],\n    CountTo: [{\n      type: Input\n    }]\n  });\n})();\nclass CountToModule {\n  /**\n   * Use in AppModule\n   * @return {?}\n   */\n  static forRoot() {\n    return {\n      ngModule: CountToModule,\n      providers: []\n    };\n  }\n  /**\n   * Use in features modules with lazy loading\n   * @return {?}\n   */\n  static forChild() {\n    return {\n      ngModule: CountToModule,\n      providers: []\n    };\n  }\n}\nCountToModule.ɵfac = function CountToModule_Factory(t) {\n  return new (t || CountToModule)();\n};\nCountToModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CountToModule\n});\nCountToModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n/**\n * @nocollapse\n */\nCountToModule.ctorParameters = () => [];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CountToModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CountToDirective\n      // Pipes.\n      // Directives.\n      ],\n\n      exports: [CountToDirective\n      // Pipes.\n      // Directives.\n      ]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CountToModule, {\n    declarations: [CountToDirective],\n    exports: [CountToDirective]\n  });\n})();\n\n// Public classes.\n\n/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-count-to\n */\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CountToDirective, CountToModule };","map":{"version":3,"names":["Directive","ElementRef","Input","NgModule","ɵngcc0","CountToDirective","constructor","el","from","duration","e","nativeElement","refreshInterval","step","ngOnInit","ngOnChanges","CountTo","start","calculate","steps","Math","ceil","increment","num","tick","setTimeout","textContent","round","ɵfac","CountToDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","inputs","features","ɵɵNgOnChangesFeature","ctorParameters","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","CountToModule","forRoot","ngModule","providers","forChild","CountToModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/Sarai Quintanilla/Documents/GitHub/FletesNacionales/template/node_modules/angular-count-to/__ivy_ngcc__/modules/angular-count-to.js"],"sourcesContent":["import { Directive, ElementRef, Input, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass CountToDirective {\n    /**\n     * @param {?} el\n     */\n    constructor(el) {\n        this.el = el;\n        this.from = 0;\n        this.duration = 4;\n        this.e = this.el.nativeElement;\n        this.refreshInterval = 30;\n        this.step = 0;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (this.CountTo) {\n            this.start();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    calculate() {\n        this.duration = this.duration * 1000;\n        this.steps = Math.ceil(this.duration / this.refreshInterval);\n        this.increment = ((this.CountTo - this.from) / this.steps);\n        this.num = this.from;\n    }\n    /**\n     * @return {?}\n     */\n    tick() {\n        setTimeout(() => {\n            this.num += this.increment;\n            this.step++;\n            if (this.step >= this.steps) {\n                this.num = this.CountTo;\n                this.e.textContent = this.CountTo;\n            }\n            else {\n                this.e.textContent = Math.round(this.num);\n                this.tick();\n            }\n        }, this.refreshInterval);\n    }\n    /**\n     * @return {?}\n     */\n    start() {\n        this.calculate();\n        this.tick();\n    }\n}\nCountToDirective.ɵfac = function CountToDirective_Factory(t) { return new (t || CountToDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCountToDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CountToDirective, selectors: [[\"\", \"CountTo\", \"\"]], inputs: { from: \"from\", duration: \"duration\", CountTo: \"CountTo\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * @nocollapse\n */\nCountToDirective.ctorParameters = () => [\n    { type: ElementRef, },\n];\nCountToDirective.propDecorators = {\n    'CountTo': [{ type: Input },],\n    'from': [{ type: Input },],\n    'duration': [{ type: Input },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CountToDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[CountTo]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { from: [{\n            type: Input\n        }], duration: [{\n            type: Input\n        }], CountTo: [{\n            type: Input\n        }] }); })();\n\nclass CountToModule {\n    /**\n     * Use in AppModule\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: CountToModule,\n            providers: []\n        };\n    }\n    /**\n     * Use in features modules with lazy loading\n     * @return {?}\n     */\n    static forChild() {\n        return {\n            ngModule: CountToModule,\n            providers: []\n        };\n    }\n}\nCountToModule.ɵfac = function CountToModule_Factory(t) { return new (t || CountToModule)(); };\nCountToModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CountToModule });\nCountToModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n/**\n * @nocollapse\n */\nCountToModule.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CountToModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CountToDirective\n                    // Pipes.\n                    // Directives.\n                ],\n                exports: [\n                    CountToDirective\n                    // Pipes.\n                    // Directives.\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CountToModule, { declarations: [CountToDirective], exports: [CountToDirective] }); })();\n\n// Public classes.\n\n/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-count-to\n */\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CountToDirective, CountToModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}