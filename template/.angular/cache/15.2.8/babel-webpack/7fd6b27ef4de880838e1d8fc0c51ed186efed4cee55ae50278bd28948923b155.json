{"ast":null,"code":"\"use strict\";\n\nvar SubscribeOnObservable_1 = require('../observable/SubscribeOnObservable');\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  return function subscribeOnOperatorFunction(source) {\n    return source.lift(new SubscribeOnOperator(scheduler, delay));\n  };\n}\nexports.subscribeOn = subscribeOn;\nvar SubscribeOnOperator = function () {\n  function SubscribeOnOperator(scheduler, delay) {\n    this.scheduler = scheduler;\n    this.delay = delay;\n  }\n  SubscribeOnOperator.prototype.call = function (subscriber, source) {\n    return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n  };\n  return SubscribeOnOperator;\n}();","map":{"version":3,"names":["SubscribeOnObservable_1","require","subscribeOn","scheduler","delay","subscribeOnOperatorFunction","source","lift","SubscribeOnOperator","exports","prototype","call","subscriber","SubscribeOnObservable","subscribe"],"sources":["F:/Plantillas/template/node_modules/ng5-slider/node_modules/rxjs/operators/subscribeOn.js"],"sourcesContent":["\"use strict\";\nvar SubscribeOnObservable_1 = require('../observable/SubscribeOnObservable');\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nexports.subscribeOn = subscribeOn;\nvar SubscribeOnOperator = (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,qCAAqC,CAAC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAW,CAACC,SAAS,EAAEC,KAAK,EAAE;EACnC,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;IAAEA,KAAK,GAAG,CAAC;EAAE;EACnC,OAAO,SAASC,2BAA2B,CAACC,MAAM,EAAE;IAChD,OAAOA,MAAM,CAACC,IAAI,CAAC,IAAIC,mBAAmB,CAACL,SAAS,EAAEC,KAAK,CAAC,CAAC;EACjE,CAAC;AACL;AACAK,OAAO,CAACP,WAAW,GAAGA,WAAW;AACjC,IAAIM,mBAAmB,GAAI,YAAY;EACnC,SAASA,mBAAmB,CAACL,SAAS,EAAEC,KAAK,EAAE;IAC3C,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,KAAK,GAAGA,KAAK;EACtB;EACAI,mBAAmB,CAACE,SAAS,CAACC,IAAI,GAAG,UAAUC,UAAU,EAAEN,MAAM,EAAE;IAC/D,OAAO,IAAIN,uBAAuB,CAACa,qBAAqB,CAACP,MAAM,EAAE,IAAI,CAACF,KAAK,EAAE,IAAI,CAACD,SAAS,CAAC,CAACW,SAAS,CAACF,UAAU,CAAC;EACtH,CAAC;EACD,OAAOJ,mBAAmB;AAC9B,CAAC,EAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}