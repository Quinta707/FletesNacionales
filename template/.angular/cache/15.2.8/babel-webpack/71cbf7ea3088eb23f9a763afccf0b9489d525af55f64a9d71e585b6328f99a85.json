{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\n// import { isPlatformBrowser } from '@angular/common';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { map, delay, withLatestFrom } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-loading-bar/core\";\nimport * as i2 from \"./shared/components/loader/loader.component\";\nimport * as i3 from \"./shared/components/tap-to-top/tap-to-top.component\";\nimport * as i4 from \"@angular/router\";\n// import { TranslateService } from '@ngx-translate/core';\nexport class AppComponent {\n  constructor(platformId, loader) {\n    this.platformId = platformId;\n    this.loader = loader;\n    // For Progressbar\n    this.loaders = this.loader.progress$.pipe(delay(1000), withLatestFrom(this.loader.progress$), map(v => v[1]));\n    // if (isPlatformBrowser(this.platformId)) {\n    //   translate.setDefaultLang('en');\n    //   translate.addLangs(['en', 'de', 'es', 'fr', 'pt', 'cn', 'ae']);\n    // }\n  }\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i1.LoadingBarService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"color\", \"includeSpinner\", \"height\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"ngx-loading-bar\", 0)(1, \"app-loader\")(2, \"app-tap-to-top\")(3, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"color\", \"#7366ff\")(\"includeSpinner\", false)(\"height\", \"4px\");\n    }\n  },\n  dependencies: [i2.LoaderComponent, i3.TapToTopComponent, i4.RouterOutlet, i1.LoadingBarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,WAAW,QAAgB,eAAe;AAC9D;AACA,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,GAAG,EAAEC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;;;;;;AAC3D;AAOA,OAAM,MAAOC,YAAY;EASvBC,YAAyCC,UAAkB,EACjDC,MAAyB;IADM,eAAU,GAAVD,UAAU;IACzC,WAAM,GAANC,MAAM;IARhB;IACA,YAAO,GAAG,IAAI,CAACA,MAAM,CAACC,SAAS,CAACC,IAAI,CAClCP,KAAK,CAAC,IAAI,CAAC,EACXC,cAAc,CAAC,IAAI,CAACI,MAAM,CAACC,SAAS,CAAC,EACrCP,GAAG,CAACS,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CACf;IAIC;IACA;IACA;IACA;EACF;;;;mBAfWN,YAAY,uBASHL,WAAW;AAAA;;QATpBK,YAAY;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXzBC,qCAAiG;;;MAAhFA,iCAAmB","names":["PLATFORM_ID","LoadingBarService","map","delay","withLatestFrom","AppComponent","constructor","platformId","loader","progress$","pipe","v","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["F:\\Plantillas\\template\\src\\app\\app.component.ts","F:\\Plantillas\\template\\src\\app\\app.component.html"],"sourcesContent":["import { Component, PLATFORM_ID, Inject } from '@angular/core';\n// import { isPlatformBrowser } from '@angular/common';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { map, delay, withLatestFrom } from 'rxjs/operators';\n// import { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n  // For Progressbar\n  loaders = this.loader.progress$.pipe(\n    delay(1000),\n    withLatestFrom(this.loader.progress$),\n    map(v => v[1]),\n  );\n  \n  constructor(@Inject(PLATFORM_ID) private platformId: Object,\n    private loader: LoadingBarService) {\n    // if (isPlatformBrowser(this.platformId)) {\n    //   translate.setDefaultLang('en');\n    //   translate.addLangs(['en', 'de', 'es', 'fr', 'pt', 'cn', 'ae']);\n    // }\n  }\n\n}\n","<ngx-loading-bar [color]=\"'#7366ff'\" [includeSpinner]=\"false\" [height]=\"'4px'\"></ngx-loading-bar>\n<app-loader></app-loader>\n<app-tap-to-top></app-tap-to-top>\n<router-outlet></router-outlet>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}