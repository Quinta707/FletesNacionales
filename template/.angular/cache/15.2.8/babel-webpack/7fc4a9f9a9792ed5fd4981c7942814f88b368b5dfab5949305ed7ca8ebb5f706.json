{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('../util/isFunction');\nvar Observable_1 = require('../Observable');\nvar Subscription_1 = require('../Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventPatternObservable = function (_super) {\n  __extends(FromEventPatternObservable, _super);\n  function FromEventPatternObservable(addHandler, removeHandler, selector) {\n    _super.call(this);\n    this.addHandler = addHandler;\n    this.removeHandler = removeHandler;\n    this.selector = selector;\n  }\n  /**\n   * Creates an Observable from an API based on addHandler/removeHandler\n   * functions.\n   *\n   * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n   * Observable.</span>\n   *\n   * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n   *\n   * Creates an Observable by using the `addHandler` and `removeHandler`\n   * functions to add and remove the handlers, with an optional selector\n   * function to project the event arguments to a result. The `addHandler` is\n   * called when the output Observable is subscribed, and `removeHandler` is\n   * called when the Subscription is unsubscribed.\n   *\n   * @example <caption>Emits clicks happening on the DOM document</caption>\n   * function addClickHandler(handler) {\n   *   document.addEventListener('click', handler);\n   * }\n   *\n   * function removeClickHandler(handler) {\n   *   document.removeEventListener('click', handler);\n   * }\n   *\n   * var clicks = Rx.Observable.fromEventPattern(\n   *   addClickHandler,\n   *   removeClickHandler\n   * );\n   * clicks.subscribe(x => console.log(x));\n   *\n   * @see {@link from}\n   * @see {@link fromEvent}\n   *\n   * @param {function(handler: Function): any} addHandler A function that takes\n   * a `handler` function as argument and attaches it somehow to the actual\n   * source of events.\n   * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n   * takes a `handler` function as argument and removes it in case it was\n   * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n   * removeHandler function will forward it.\n   * @param {function(...args: any): T} [selector] An optional function to\n   * post-process results. It takes the arguments from the event handler and\n   * should return a single value.\n   * @return {Observable<T>}\n   * @static true\n   * @name fromEventPattern\n   * @owner Observable\n   */\n  FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n    return new FromEventPatternObservable(addHandler, removeHandler, selector);\n  };\n  /** @deprecated internal use only */\n  FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n    var _this = this;\n    var removeHandler = this.removeHandler;\n    var handler = !!this.selector ? function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n      }\n      _this._callSelector(subscriber, args);\n    } : function (e) {\n      subscriber.next(e);\n    };\n    var retValue = this._callAddHandler(handler, subscriber);\n    if (!isFunction_1.isFunction(removeHandler)) {\n      return;\n    }\n    subscriber.add(new Subscription_1.Subscription(function () {\n      //TODO: determine whether or not to forward to error handler\n      removeHandler(handler, retValue);\n    }));\n  };\n  FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\n    try {\n      var result = this.selector.apply(this, args);\n      subscriber.next(result);\n    } catch (e) {\n      subscriber.error(e);\n    }\n  };\n  FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\n    try {\n      return this.addHandler(handler) || null;\n    } catch (e) {\n      errorSubscriber.error(e);\n    }\n  };\n  return FromEventPatternObservable;\n}(Observable_1.Observable);\nexports.FromEventPatternObservable = FromEventPatternObservable;","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","isFunction_1","require","Observable_1","Subscription_1","FromEventPatternObservable","_super","addHandler","removeHandler","selector","call","_subscribe","subscriber","_this","handler","args","_i","arguments","length","_callSelector","e","next","retValue","_callAddHandler","isFunction","add","Subscription","result","apply","error","errorSubscriber","Observable","exports"],"sources":["F:/Plantillas/template/node_modules/ng5-slider/node_modules/rxjs/observable/FromEventPatternObservable.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('../util/isFunction');\nvar Observable_1 = require('../Observable');\nvar Subscription_1 = require('../Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventPatternObservable = (function (_super) {\n    __extends(FromEventPatternObservable, _super);\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\n        _super.call(this);\n        this.addHandler = addHandler;\n        this.removeHandler = removeHandler;\n        this.selector = selector;\n    }\n    /**\n     * Creates an Observable from an API based on addHandler/removeHandler\n     * functions.\n     *\n     * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n     * Observable.</span>\n     *\n     * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n     *\n     * Creates an Observable by using the `addHandler` and `removeHandler`\n     * functions to add and remove the handlers, with an optional selector\n     * function to project the event arguments to a result. The `addHandler` is\n     * called when the output Observable is subscribed, and `removeHandler` is\n     * called when the Subscription is unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * function addClickHandler(handler) {\n     *   document.addEventListener('click', handler);\n     * }\n     *\n     * function removeClickHandler(handler) {\n     *   document.removeEventListener('click', handler);\n     * }\n     *\n     * var clicks = Rx.Observable.fromEventPattern(\n     *   addClickHandler,\n     *   removeClickHandler\n     * );\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEvent}\n     *\n     * @param {function(handler: Function): any} addHandler A function that takes\n     * a `handler` function as argument and attaches it somehow to the actual\n     * source of events.\n     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n     * takes a `handler` function as argument and removes it in case it was\n     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n     * removeHandler function will forward it.\n     * @param {function(...args: any): T} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEventPattern\n     * @owner Observable\n     */\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\n    };\n    /** @deprecated internal use only */ FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var removeHandler = this.removeHandler;\n        var handler = !!this.selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            _this._callSelector(subscriber, args);\n        } : function (e) { subscriber.next(e); };\n        var retValue = this._callAddHandler(handler, subscriber);\n        if (!isFunction_1.isFunction(removeHandler)) {\n            return;\n        }\n        subscriber.add(new Subscription_1.Subscription(function () {\n            //TODO: determine whether or not to forward to error handler\n            removeHandler(handler, retValue);\n        }));\n    };\n    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\n        try {\n            var result = this.selector.apply(this, args);\n            subscriber.next(result);\n        }\n        catch (e) {\n            subscriber.error(e);\n        }\n    };\n    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\n        try {\n            return this.addHandler(handler) || null;\n        }\n        catch (e) {\n            errorSubscriber.error(e);\n        }\n    };\n    return FromEventPatternObservable;\n}(Observable_1.Observable));\nexports.FromEventPatternObservable = FromEventPatternObservable;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}