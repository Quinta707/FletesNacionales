{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/getsubnodes\n */\n\n/* globals EventTarget, Event */\n\nexport default function getSubNodes(head, excludedProperties = new Set()) {\n  const nodes = [head];\n\n  // @if CK_DEBUG_WATCHDOG // const prevNodeMap = new Map();\n\n  // Nodes are stored to prevent infinite looping.\n  const subNodes = new Set();\n  let nodeIndex = 0;\n  while (nodes.length > nodeIndex) {\n    // Incrementing the iterator is much faster than changing size of the array with Array.prototype.shift().\n    const node = nodes[nodeIndex++];\n    if (subNodes.has(node) || shouldNodeBeSkipped(node) || excludedProperties.has(node)) {\n      continue;\n    }\n    subNodes.add(node);\n\n    // Handle arrays, maps, sets, custom collections that implements `[ Symbol.iterator ]()`, etc.\n    if (node[Symbol.iterator]) {\n      // The custom editor iterators might cause some problems if the editor is crashed.\n      try {\n        for (const n of node) {\n          nodes.push(n);\n\n          // @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( n ) ) {\n          // @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( n, node );\n          // @if CK_DEBUG_WATCHDOG // }\n        }\n      } catch (err) {\n        // Do not log errors for broken structures\n        // since we are in the error handling process already.\n        // eslint-disable-line no-empty\n      }\n    } else {\n      for (const key in node) {\n        // We share a reference via the protobuf library within the editors,\n        // hence the shared value should be skipped. Although, it's not a perfect\n        // solution since new places like that might occur in the future.\n        if (key === 'defaultValue') {\n          continue;\n        }\n        nodes.push(node[key]);\n\n        // @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( node[ key ] ) ) {\n        // @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( node[ key ], node );\n        // @if CK_DEBUG_WATCHDOG // }\n      }\n    }\n  }\n\n  // @if CK_DEBUG_WATCHDOG // return { subNodes, prevNodeMap };\n\n  return subNodes;\n}\nfunction shouldNodeBeSkipped(node) {\n  const type = Object.prototype.toString.call(node);\n  const typeOfNode = typeof node;\n  return typeOfNode === 'number' || typeOfNode === 'boolean' || typeOfNode === 'string' || typeOfNode === 'symbol' || typeOfNode === 'function' || type === '[object Date]' || type === '[object RegExp]' || type === '[object Module]' || node === undefined || node === null ||\n  // Skip native DOM objects, e.g. Window, nodes, events, etc.\n  node instanceof EventTarget || node instanceof Event;\n}","map":{"version":3,"names":["getSubNodes","head","excludedProperties","Set","nodes","subNodes","nodeIndex","length","node","has","shouldNodeBeSkipped","add","Symbol","iterator","n","push","err","key","type","Object","prototype","toString","call","typeOfNode","undefined","EventTarget","Event"],"sources":["F:/Plantillas/template/node_modules/@ckeditor/ckeditor5-watchdog/src/utils/getsubnodes.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/utils/getsubnodes\n */\n\n/* globals EventTarget, Event */\n\nexport default function getSubNodes( head, excludedProperties = new Set() ) {\n\tconst nodes = [ head ];\n\n\t// @if CK_DEBUG_WATCHDOG // const prevNodeMap = new Map();\n\n\t// Nodes are stored to prevent infinite looping.\n\tconst subNodes = new Set();\n\tlet nodeIndex = 0;\n\n\twhile ( nodes.length > nodeIndex ) {\n\t\t// Incrementing the iterator is much faster than changing size of the array with Array.prototype.shift().\n\t\tconst node = nodes[ nodeIndex++ ];\n\n\t\tif ( subNodes.has( node ) || shouldNodeBeSkipped( node ) || excludedProperties.has( node ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tsubNodes.add( node );\n\n\t\t// Handle arrays, maps, sets, custom collections that implements `[ Symbol.iterator ]()`, etc.\n\t\tif ( node[ Symbol.iterator ] ) {\n\t\t\t// The custom editor iterators might cause some problems if the editor is crashed.\n\t\t\ttry {\n\t\t\t\tfor ( const n of node ) {\n\t\t\t\t\tnodes.push( n );\n\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( n ) ) {\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( n, node );\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // }\n\t\t\t\t}\n\t\t\t} catch ( err ) {\n\t\t\t\t// Do not log errors for broken structures\n\t\t\t\t// since we are in the error handling process already.\n\t\t\t\t// eslint-disable-line no-empty\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( const key in node ) {\n\t\t\t\t// We share a reference via the protobuf library within the editors,\n\t\t\t\t// hence the shared value should be skipped. Although, it's not a perfect\n\t\t\t\t// solution since new places like that might occur in the future.\n\t\t\t\tif ( key === 'defaultValue' ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tnodes.push( node[ key ] );\n\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( node[ key ] ) ) {\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( node[ key ], node );\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // }\n\t\t\t}\n\t\t}\n\t}\n\n\t// @if CK_DEBUG_WATCHDOG // return { subNodes, prevNodeMap };\n\n\treturn subNodes;\n}\n\nfunction shouldNodeBeSkipped( node ) {\n\tconst type = Object.prototype.toString.call( node );\n\tconst typeOfNode = typeof node;\n\n\treturn (\n\t\ttypeOfNode === 'number' ||\n\t\ttypeOfNode === 'boolean' ||\n\t\ttypeOfNode === 'string' ||\n\t\ttypeOfNode === 'symbol' ||\n\t\ttypeOfNode === 'function' ||\n\t\ttype === '[object Date]' ||\n\t\ttype === '[object RegExp]' ||\n\t\ttype === '[object Module]' ||\n\n\t\tnode === undefined ||\n\t\tnode === null ||\n\n\t\t// Skip native DOM objects, e.g. Window, nodes, events, etc.\n\t\tnode instanceof EventTarget ||\n\t\tnode instanceof Event\n\t);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe,SAASA,WAAW,CAAEC,IAAI,EAAEC,kBAAkB,GAAG,IAAIC,GAAG,EAAE,EAAG;EAC3E,MAAMC,KAAK,GAAG,CAAEH,IAAI,CAAE;;EAEtB;;EAEA;EACA,MAAMI,QAAQ,GAAG,IAAIF,GAAG,EAAE;EAC1B,IAAIG,SAAS,GAAG,CAAC;EAEjB,OAAQF,KAAK,CAACG,MAAM,GAAGD,SAAS,EAAG;IAClC;IACA,MAAME,IAAI,GAAGJ,KAAK,CAAEE,SAAS,EAAE,CAAE;IAEjC,IAAKD,QAAQ,CAACI,GAAG,CAAED,IAAI,CAAE,IAAIE,mBAAmB,CAAEF,IAAI,CAAE,IAAIN,kBAAkB,CAACO,GAAG,CAAED,IAAI,CAAE,EAAG;MAC5F;IACD;IAEAH,QAAQ,CAACM,GAAG,CAAEH,IAAI,CAAE;;IAEpB;IACA,IAAKA,IAAI,CAAEI,MAAM,CAACC,QAAQ,CAAE,EAAG;MAC9B;MACA,IAAI;QACH,KAAM,MAAMC,CAAC,IAAIN,IAAI,EAAG;UACvBJ,KAAK,CAACW,IAAI,CAAED,CAAC,CAAE;;UAEf;UACA;UACA;QACD;MACD,CAAC,CAAC,OAAQE,GAAG,EAAG;QACf;QACA;QACA;MAAA;IAEF,CAAC,MAAM;MACN,KAAM,MAAMC,GAAG,IAAIT,IAAI,EAAG;QACzB;QACA;QACA;QACA,IAAKS,GAAG,KAAK,cAAc,EAAG;UAC7B;QACD;QAEAb,KAAK,CAACW,IAAI,CAAEP,IAAI,CAAES,GAAG,CAAE,CAAE;;QAEzB;QACA;QACA;MACD;IACD;EACD;;EAEA;;EAEA,OAAOZ,QAAQ;AAChB;AAEA,SAASK,mBAAmB,CAAEF,IAAI,EAAG;EACpC,MAAMU,IAAI,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAAEd,IAAI,CAAE;EACnD,MAAMe,UAAU,GAAG,OAAOf,IAAI;EAE9B,OACCe,UAAU,KAAK,QAAQ,IACvBA,UAAU,KAAK,SAAS,IACxBA,UAAU,KAAK,QAAQ,IACvBA,UAAU,KAAK,QAAQ,IACvBA,UAAU,KAAK,UAAU,IACzBL,IAAI,KAAK,eAAe,IACxBA,IAAI,KAAK,iBAAiB,IAC1BA,IAAI,KAAK,iBAAiB,IAE1BV,IAAI,KAAKgB,SAAS,IAClBhB,IAAI,KAAK,IAAI;EAEb;EACAA,IAAI,YAAYiB,WAAW,IAC3BjB,IAAI,YAAYkB,KAAK;AAEvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}