{"ast":null,"code":"import { NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Subject, merge, of } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i5 from \"../../../../shared/components/breadcrumb/breadcrumb.component\";\nconst _c0 = [\"instance\"];\nfunction TypeaheadComponent_span_89_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"searching...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TypeaheadComponent_div_90_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \"Sorry, suggestions could not be loaded.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TypeaheadComponent_ng_template_103_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 19)(1, \"ngb-highlight\", 20);\n  }\n  if (rf & 2) {\n    const r_r4 = ctx.result;\n    const t_r5 = ctx.term;\n    i0.ɵɵproperty(\"src\", \"https://upload.wikimedia.org/wikipedia/commons/thumb/\" + r_r4[\"flag\"], i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"result\", r_r4.name)(\"term\", t_r5);\n  }\n}\nconst _c1 = function () {\n  return [\"Bonus UI\", \"Base\"];\n};\nconst states = ['Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District Of Columbia', 'Federated States Of Micronesia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Islands', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\nconst statesWithFlags = [{\n  'name': 'Alabama',\n  'flag': '5/5c/Flag_of_Alabama.svg/45px-Flag_of_Alabama.svg.png'\n}, {\n  'name': 'Alaska',\n  'flag': 'e/e6/Flag_of_Alaska.svg/43px-Flag_of_Alaska.svg.png'\n}, {\n  'name': 'Arizona',\n  'flag': '9/9d/Flag_of_Arizona.svg/45px-Flag_of_Arizona.svg.png'\n}, {\n  'name': 'Arkansas',\n  'flag': '9/9d/Flag_of_Arkansas.svg/45px-Flag_of_Arkansas.svg.png'\n}, {\n  'name': 'California',\n  'flag': '0/01/Flag_of_California.svg/45px-Flag_of_California.svg.png'\n}, {\n  'name': 'Colorado',\n  'flag': '4/46/Flag_of_Colorado.svg/45px-Flag_of_Colorado.svg.png'\n}, {\n  'name': 'Connecticut',\n  'flag': '9/96/Flag_of_Connecticut.svg/39px-Flag_of_Connecticut.svg.png'\n}, {\n  'name': 'Delaware',\n  'flag': 'c/c6/Flag_of_Delaware.svg/45px-Flag_of_Delaware.svg.png'\n}, {\n  'name': 'Florida',\n  'flag': 'f/f7/Flag_of_Florida.svg/45px-Flag_of_Florida.svg.png'\n}, {\n  'name': 'Georgia',\n  'flag': '5/54/Flag_of_Georgia_%28U.S._state%29.svg/46px-Flag_of_Georgia_%28U.S._state%29.svg.png'\n}, {\n  'name': 'Hawaii',\n  'flag': 'e/ef/Flag_of_Hawaii.svg/46px-Flag_of_Hawaii.svg.png'\n}, {\n  'name': 'Idaho',\n  'flag': 'a/a4/Flag_of_Idaho.svg/38px-Flag_of_Idaho.svg.png'\n}, {\n  'name': 'Illinois',\n  'flag': '0/01/Flag_of_Illinois.svg/46px-Flag_of_Illinois.svg.png'\n}, {\n  'name': 'Indiana',\n  'flag': 'a/ac/Flag_of_Indiana.svg/45px-Flag_of_Indiana.svg.png'\n}, {\n  'name': 'Iowa',\n  'flag': 'a/aa/Flag_of_Iowa.svg/44px-Flag_of_Iowa.svg.png'\n}, {\n  'name': 'Kansas',\n  'flag': 'd/da/Flag_of_Kansas.svg/46px-Flag_of_Kansas.svg.png'\n}, {\n  'name': 'Kentucky',\n  'flag': '8/8d/Flag_of_Kentucky.svg/46px-Flag_of_Kentucky.svg.png'\n}, {\n  'name': 'Louisiana',\n  'flag': 'e/e0/Flag_of_Louisiana.svg/46px-Flag_of_Louisiana.svg.png'\n}, {\n  'name': 'Maine',\n  'flag': '3/35/Flag_of_Maine.svg/45px-Flag_of_Maine.svg.png'\n}, {\n  'name': 'Maryland',\n  'flag': 'a/a0/Flag_of_Maryland.svg/45px-Flag_of_Maryland.svg.png'\n}, {\n  'name': 'Massachusetts',\n  'flag': 'f/f2/Flag_of_Massachusetts.svg/46px-Flag_of_Massachusetts.svg.png'\n}, {\n  'name': 'Michigan',\n  'flag': 'b/b5/Flag_of_Michigan.svg/45px-Flag_of_Michigan.svg.png'\n}, {\n  'name': 'Minnesota',\n  'flag': 'b/b9/Flag_of_Minnesota.svg/46px-Flag_of_Minnesota.svg.png'\n}, {\n  'name': 'Mississippi',\n  'flag': '4/42/Flag_of_Mississippi.svg/45px-Flag_of_Mississippi.svg.png'\n}, {\n  'name': 'Missouri',\n  'flag': '5/5a/Flag_of_Missouri.svg/46px-Flag_of_Missouri.svg.png'\n}, {\n  'name': 'Montana',\n  'flag': 'c/cb/Flag_of_Montana.svg/45px-Flag_of_Montana.svg.png'\n}, {\n  'name': 'Nebraska',\n  'flag': '4/4d/Flag_of_Nebraska.svg/46px-Flag_of_Nebraska.svg.png'\n}, {\n  'name': 'Nevada',\n  'flag': 'f/f1/Flag_of_Nevada.svg/45px-Flag_of_Nevada.svg.png'\n}, {\n  'name': 'New Hampshire',\n  'flag': '2/28/Flag_of_New_Hampshire.svg/45px-Flag_of_New_Hampshire.svg.png'\n}, {\n  'name': 'New Jersey',\n  'flag': '9/92/Flag_of_New_Jersey.svg/45px-Flag_of_New_Jersey.svg.png'\n}, {\n  'name': 'New Mexico',\n  'flag': 'c/c3/Flag_of_New_Mexico.svg/45px-Flag_of_New_Mexico.svg.png'\n}, {\n  'name': 'New York',\n  'flag': '1/1a/Flag_of_New_York.svg/46px-Flag_of_New_York.svg.png'\n}, {\n  'name': 'North Carolina',\n  'flag': 'b/bb/Flag_of_North_Carolina.svg/45px-Flag_of_North_Carolina.svg.png'\n}, {\n  'name': 'North Dakota',\n  'flag': 'e/ee/Flag_of_North_Dakota.svg/38px-Flag_of_North_Dakota.svg.png'\n}, {\n  'name': 'Ohio',\n  'flag': '4/4c/Flag_of_Ohio.svg/46px-Flag_of_Ohio.svg.png'\n}, {\n  'name': 'Oklahoma',\n  'flag': '6/6e/Flag_of_Oklahoma.svg/45px-Flag_of_Oklahoma.svg.png'\n}, {\n  'name': 'Oregon',\n  'flag': 'b/b9/Flag_of_Oregon.svg/46px-Flag_of_Oregon.svg.png'\n}, {\n  'name': 'Pennsylvania',\n  'flag': 'f/f7/Flag_of_Pennsylvania.svg/45px-Flag_of_Pennsylvania.svg.png'\n}, {\n  'name': 'Rhode Island',\n  'flag': 'f/f3/Flag_of_Rhode_Island.svg/32px-Flag_of_Rhode_Island.svg.png'\n}, {\n  'name': 'South Carolina',\n  'flag': '6/69/Flag_of_South_Carolina.svg/45px-Flag_of_South_Carolina.svg.png'\n}, {\n  'name': 'South Dakota',\n  'flag': '1/1a/Flag_of_South_Dakota.svg/46px-Flag_of_South_Dakota.svg.png'\n}, {\n  'name': 'Tennessee',\n  'flag': '9/9e/Flag_of_Tennessee.svg/46px-Flag_of_Tennessee.svg.png'\n}, {\n  'name': 'Texas',\n  'flag': 'f/f7/Flag_of_Texas.svg/45px-Flag_of_Texas.svg.png'\n}, {\n  'name': 'Utah',\n  'flag': 'f/f6/Flag_of_Utah.svg/45px-Flag_of_Utah.svg.png'\n}, {\n  'name': 'Vermont',\n  'flag': '4/49/Flag_of_Vermont.svg/46px-Flag_of_Vermont.svg.png'\n}, {\n  'name': 'Virginia',\n  'flag': '4/47/Flag_of_Virginia.svg/44px-Flag_of_Virginia.svg.png'\n}, {\n  'name': 'Washington',\n  'flag': '5/54/Flag_of_Washington.svg/46px-Flag_of_Washington.svg.png'\n}, {\n  'name': 'West Virginia',\n  'flag': '2/22/Flag_of_West_Virginia.svg/46px-Flag_of_West_Virginia.svg.png'\n}, {\n  'name': 'Wisconsin',\n  'flag': '2/22/Flag_of_Wisconsin.svg/45px-Flag_of_Wisconsin.svg.png'\n}, {\n  'name': 'Wyoming',\n  'flag': 'b/bc/Flag_of_Wyoming.svg/43px-Flag_of_Wyoming.svg.png'\n}];\nconst WIKI_URL = 'https://en.wikipedia.org/w/api.php';\nconst PARAMS = new HttpParams({\n  fromObject: {\n    action: 'opensearch',\n    format: 'json',\n    origin: '*'\n  }\n});\nexport class WikipediaService {\n  constructor(http) {\n    this.http = http;\n  }\n  search(term) {\n    if (term === '') {\n      return of([]);\n    }\n    return this.http.get(WIKI_URL, {\n      params: PARAMS.set('search', term)\n    }).pipe(map(response => response[1]));\n  }\n}\nWikipediaService.ɵfac = function WikipediaService_Factory(t) {\n  return new (t || WikipediaService)(i0.ɵɵinject(i1.HttpClient));\n};\nWikipediaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WikipediaService,\n  factory: WikipediaService.ɵfac\n});\nexport class TypeaheadComponent {\n  constructor(_service) {\n    this._service = _service;\n    this.searching = false;\n    this.searchFailed = false;\n    this.focus$ = new Subject();\n    this.click$ = new Subject();\n    this.search = text$ => text$.pipe(debounceTime(200), distinctUntilChanged(), map(term => term.length < 2 ? [] : states.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10)));\n    this.searchOnFocus = text$ => {\n      const debouncedText$ = text$.pipe(debounceTime(200), distinctUntilChanged());\n      const clicksWithClosedPopup$ = this.click$.pipe(filter(() => !this.instance.isPopupOpen()));\n      const inputFocus$ = this.focus$;\n      return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(map(term => (term === '' ? states : states.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1)).slice(0, 10)));\n    };\n    this.searchWikipedia = text$ => text$.pipe(debounceTime(300), distinctUntilChanged(), tap(() => this.searching = true), switchMap(term => this._service.search(term).pipe(tap(() => this.searchFailed = false), catchError(() => {\n      this.searchFailed = true;\n      return of([]);\n    }))), tap(() => this.searching = false));\n    this.searchTemp = text$ => text$.pipe(debounceTime(200), map(term => term === '' ? [] : statesWithFlags.filter(v => v.name.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10)));\n    this.formatter = x => x.name;\n  }\n  ngOnInit() {}\n}\nTypeaheadComponent.ɵfac = function TypeaheadComponent_Factory(t) {\n  return new (t || TypeaheadComponent)(i0.ɵɵdirectiveInject(WikipediaService));\n};\nTypeaheadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TypeaheadComponent,\n  selectors: [[\"app-typeahead\"]],\n  viewQuery: function TypeaheadComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.instance = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([WikipediaService])],\n  decls: 112,\n  vars: 30,\n  consts: [[3, \"title\", \"items\", \"active_item\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-sm-12\", \"col-xl-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"for\", \"typeahead-basic\"], [\"id\", \"typeahead-basic\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngbTypeahead\", \"ngModelChange\"], [1, \"mb-0\"], [1, \"form-group\"], [\"for\", \"typeahead-http\"], [\"id\", \"typeahead-http\", \"type\", \"text\", \"placeholder\", \"Wikipedia search\", 1, \"form-control\", 3, \"ngModel\", \"ngbTypeahead\", \"ngModelChange\"], [4, \"ngIf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"rt\", \"\"], [\"for\", \"typeahead-template\"], [\"id\", \"typeahead-template\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngbTypeahead\", \"resultTemplate\", \"inputFormatter\", \"ngModelChange\"], [1, \"invalid-feedback\"], [1, \"me-1\", 2, \"width\", \"16px\", 3, \"src\"], [3, \"result\", \"term\"]],\n  template: function TypeaheadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-breadcrumb\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\");\n      i0.ɵɵtext(7, \"Simple Typeahead\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtext(9, \" A typeahead example that gets values from a static \");\n      i0.ɵɵelementStart(10, \"code\");\n      i0.ɵɵtext(11, \"string[]\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"ul\")(13, \"li\")(14, \"code\");\n      i0.ɵɵtext(15, \"debounceTime\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \" operator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"li\");\n      i0.ɵɵtext(18, \"kicks in only if 2+ characters typed\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"li\");\n      i0.ɵɵtext(20, \"limits to 10 results\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"label\", 7);\n      i0.ɵɵtext(22, \"Search for a state:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function TypeaheadComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.model = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"hr\");\n      i0.ɵɵelementStart(25, \"pre\", 9);\n      i0.ɵɵtext(26);\n      i0.ɵɵpipe(27, \"json\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(28, \"div\", 3)(29, \"div\", 4)(30, \"div\", 5)(31, \"h5\");\n      i0.ɵɵtext(32, \"Open on focus\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 6);\n      i0.ɵɵtext(34, \" A typeahead example that gets values from a static \");\n      i0.ɵɵelementStart(35, \"code\");\n      i0.ɵɵtext(36, \"string[]\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"ul\")(38, \"li\")(39, \"code\");\n      i0.ɵɵtext(40, \"debounceTime\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(41, \" operator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"li\");\n      i0.ɵɵtext(43, \"kicks in only if 2+ characters typed\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"li\");\n      i0.ɵɵtext(45, \"limits to 10 results\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(46, \"label\", 7);\n      i0.ɵɵtext(47, \"Search for a state:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function TypeaheadComponent_Template_input_ngModelChange_48_listener($event) {\n        return ctx.modelFocus = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(49, \"hr\");\n      i0.ɵɵelementStart(50, \"pre\", 9);\n      i0.ɵɵtext(51);\n      i0.ɵɵpipe(52, \"json\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(53, \"div\", 3)(54, \"div\", 4)(55, \"div\", 5)(56, \"h5\");\n      i0.ɵɵtext(57, \"Wikipedia search\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(58, \"div\", 6);\n      i0.ɵɵtext(59, \" A typeahead example that gets values from the \");\n      i0.ɵɵelementStart(60, \"code\");\n      i0.ɵɵtext(61, \"WikipediaService\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(62, \"ul\")(63, \"li\");\n      i0.ɵɵtext(64, \"remote data retrieval\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(65, \"li\")(66, \"code\");\n      i0.ɵɵtext(67, \"debounceTime\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(68, \" operator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"li\")(70, \"code\");\n      i0.ɵɵtext(71, \"do\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(72, \" operator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"li\")(74, \"code\");\n      i0.ɵɵtext(75, \"distinctUntilChanged\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(76, \" operator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(77, \"li\")(78, \"code\");\n      i0.ɵɵtext(79, \"switchMap\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(80, \" operator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(81, \"li\")(82, \"code\");\n      i0.ɵɵtext(83, \"catch\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(84, \" operator to display an error message in case of connectivity issue\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(85, \"div\", 10)(86, \"label\", 11);\n      i0.ɵɵtext(87, \"Search for a wiki page:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(88, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function TypeaheadComponent_Template_input_ngModelChange_88_listener($event) {\n        return ctx.modelWiki = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(89, TypeaheadComponent_span_89_Template, 2, 0, \"span\", 13);\n      i0.ɵɵtemplate(90, TypeaheadComponent_div_90_Template, 2, 0, \"div\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(91, \"hr\");\n      i0.ɵɵelementStart(92, \"pre\", 9);\n      i0.ɵɵtext(93);\n      i0.ɵɵpipe(94, \"json\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(95, \"div\", 3)(96, \"div\", 4)(97, \"div\", 5)(98, \"h5\");\n      i0.ɵɵtext(99, \"Template for results\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(100, \"div\", 6)(101, \"p\");\n      i0.ɵɵtext(102, \"A typeahead example that uses a custom template for results display, an object as the model, and the highlight directive to highlight the term inside the custom template. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(103, TypeaheadComponent_ng_template_103_Template, 2, 3, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(105, \"label\", 16);\n      i0.ɵɵtext(106, \"Search for a state:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(107, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function TypeaheadComponent_Template_input_ngModelChange_107_listener($event) {\n        return ctx.modelTemp = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(108, \"hr\");\n      i0.ɵɵelementStart(109, \"pre\", 9);\n      i0.ɵɵtext(110);\n      i0.ɵɵpipe(111, \"json\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(104);\n      i0.ɵɵproperty(\"title\", \"Typeahead\")(\"items\", i0.ɵɵpureFunction0(29, _c1))(\"active_item\", \"Typeahead\");\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"ngModel\", ctx.model)(\"ngbTypeahead\", ctx.search);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Model: \", i0.ɵɵpipeBind1(27, 21, ctx.model), \"\");\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngModel\", ctx.modelFocus)(\"ngbTypeahead\", ctx.searchOnFocus);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Model: \", i0.ɵɵpipeBind1(52, 23, ctx.modelFocus), \"\");\n      i0.ɵɵadvance(37);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.searchFailed);\n      i0.ɵɵproperty(\"ngModel\", ctx.modelWiki)(\"ngbTypeahead\", ctx.searchWikipedia);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.searching);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.searchFailed);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Model: \", i0.ɵɵpipeBind1(94, 25, ctx.modelWiki), \"\");\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.modelTemp)(\"ngbTypeahead\", ctx.searchTemp)(\"resultTemplate\", _r2)(\"inputFormatter\", ctx.formatter);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Model: \", i0.ɵɵpipeBind1(111, 27, ctx.modelTemp), \"\");\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.NgbHighlight, i4.NgbTypeahead, i5.BreadcrumbComponent, i2.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["NgbTypeahead","HttpClient","HttpParams","Subject","merge","of","catchError","debounceTime","distinctUntilChanged","filter","map","switchMap","tap","i0","states","statesWithFlags","WIKI_URL","PARAMS","fromObject","action","format","origin","WikipediaService","constructor","http","search","term","get","params","set","pipe","response","factory","TypeaheadComponent","_service","text$","length","v","toLowerCase","indexOf","slice","debouncedText$","clicksWithClosedPopup$","click$","instance","isPopupOpen","inputFocus$","focus$","searching","searchFailed","name","x","ngOnInit","selectors","viewQuery","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\Plantillas\\template\\src\\app\\components\\bonus-ui\\base\\typeahead\\typeahead.component.ts","F:\\Plantillas\\template\\src\\app\\components\\bonus-ui\\base\\typeahead\\typeahead.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, Injectable } from '@angular/core';\nimport { NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, Subject, merge, of, } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, tap } from 'rxjs/operators';\n\nconst states = ['Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado',\n  'Connecticut', 'Delaware', 'District Of Columbia', 'Federated States Of Micronesia', 'Florida', 'Georgia',\n  'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine',\n  'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana',\n  'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',\n  'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island',\n  'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Islands', 'Virginia',\n  'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n\nconst statesWithFlags: { name: string, flag: string }[] = [\n  { 'name': 'Alabama', 'flag': '5/5c/Flag_of_Alabama.svg/45px-Flag_of_Alabama.svg.png' },\n  { 'name': 'Alaska', 'flag': 'e/e6/Flag_of_Alaska.svg/43px-Flag_of_Alaska.svg.png' },\n  { 'name': 'Arizona', 'flag': '9/9d/Flag_of_Arizona.svg/45px-Flag_of_Arizona.svg.png' },\n  { 'name': 'Arkansas', 'flag': '9/9d/Flag_of_Arkansas.svg/45px-Flag_of_Arkansas.svg.png' },\n  { 'name': 'California', 'flag': '0/01/Flag_of_California.svg/45px-Flag_of_California.svg.png' },\n  { 'name': 'Colorado', 'flag': '4/46/Flag_of_Colorado.svg/45px-Flag_of_Colorado.svg.png' },\n  { 'name': 'Connecticut', 'flag': '9/96/Flag_of_Connecticut.svg/39px-Flag_of_Connecticut.svg.png' },\n  { 'name': 'Delaware', 'flag': 'c/c6/Flag_of_Delaware.svg/45px-Flag_of_Delaware.svg.png' },\n  { 'name': 'Florida', 'flag': 'f/f7/Flag_of_Florida.svg/45px-Flag_of_Florida.svg.png' },\n  { 'name': 'Georgia', 'flag': '5/54/Flag_of_Georgia_%28U.S._state%29.svg/46px-Flag_of_Georgia_%28U.S._state%29.svg.png' },\n  { 'name': 'Hawaii', 'flag': 'e/ef/Flag_of_Hawaii.svg/46px-Flag_of_Hawaii.svg.png' },\n  { 'name': 'Idaho', 'flag': 'a/a4/Flag_of_Idaho.svg/38px-Flag_of_Idaho.svg.png' },\n  { 'name': 'Illinois', 'flag': '0/01/Flag_of_Illinois.svg/46px-Flag_of_Illinois.svg.png' },\n  { 'name': 'Indiana', 'flag': 'a/ac/Flag_of_Indiana.svg/45px-Flag_of_Indiana.svg.png' },\n  { 'name': 'Iowa', 'flag': 'a/aa/Flag_of_Iowa.svg/44px-Flag_of_Iowa.svg.png' },\n  { 'name': 'Kansas', 'flag': 'd/da/Flag_of_Kansas.svg/46px-Flag_of_Kansas.svg.png' },\n  { 'name': 'Kentucky', 'flag': '8/8d/Flag_of_Kentucky.svg/46px-Flag_of_Kentucky.svg.png' },\n  { 'name': 'Louisiana', 'flag': 'e/e0/Flag_of_Louisiana.svg/46px-Flag_of_Louisiana.svg.png' },\n  { 'name': 'Maine', 'flag': '3/35/Flag_of_Maine.svg/45px-Flag_of_Maine.svg.png' },\n  { 'name': 'Maryland', 'flag': 'a/a0/Flag_of_Maryland.svg/45px-Flag_of_Maryland.svg.png' },\n  { 'name': 'Massachusetts', 'flag': 'f/f2/Flag_of_Massachusetts.svg/46px-Flag_of_Massachusetts.svg.png' },\n  { 'name': 'Michigan', 'flag': 'b/b5/Flag_of_Michigan.svg/45px-Flag_of_Michigan.svg.png' },\n  { 'name': 'Minnesota', 'flag': 'b/b9/Flag_of_Minnesota.svg/46px-Flag_of_Minnesota.svg.png' },\n  { 'name': 'Mississippi', 'flag': '4/42/Flag_of_Mississippi.svg/45px-Flag_of_Mississippi.svg.png' },\n  { 'name': 'Missouri', 'flag': '5/5a/Flag_of_Missouri.svg/46px-Flag_of_Missouri.svg.png' },\n  { 'name': 'Montana', 'flag': 'c/cb/Flag_of_Montana.svg/45px-Flag_of_Montana.svg.png' },\n  { 'name': 'Nebraska', 'flag': '4/4d/Flag_of_Nebraska.svg/46px-Flag_of_Nebraska.svg.png' },\n  { 'name': 'Nevada', 'flag': 'f/f1/Flag_of_Nevada.svg/45px-Flag_of_Nevada.svg.png' },\n  { 'name': 'New Hampshire', 'flag': '2/28/Flag_of_New_Hampshire.svg/45px-Flag_of_New_Hampshire.svg.png' },\n  { 'name': 'New Jersey', 'flag': '9/92/Flag_of_New_Jersey.svg/45px-Flag_of_New_Jersey.svg.png' },\n  { 'name': 'New Mexico', 'flag': 'c/c3/Flag_of_New_Mexico.svg/45px-Flag_of_New_Mexico.svg.png' },\n  { 'name': 'New York', 'flag': '1/1a/Flag_of_New_York.svg/46px-Flag_of_New_York.svg.png' },\n  { 'name': 'North Carolina', 'flag': 'b/bb/Flag_of_North_Carolina.svg/45px-Flag_of_North_Carolina.svg.png' },\n  { 'name': 'North Dakota', 'flag': 'e/ee/Flag_of_North_Dakota.svg/38px-Flag_of_North_Dakota.svg.png' },\n  { 'name': 'Ohio', 'flag': '4/4c/Flag_of_Ohio.svg/46px-Flag_of_Ohio.svg.png' },\n  { 'name': 'Oklahoma', 'flag': '6/6e/Flag_of_Oklahoma.svg/45px-Flag_of_Oklahoma.svg.png' },\n  { 'name': 'Oregon', 'flag': 'b/b9/Flag_of_Oregon.svg/46px-Flag_of_Oregon.svg.png' },\n  { 'name': 'Pennsylvania', 'flag': 'f/f7/Flag_of_Pennsylvania.svg/45px-Flag_of_Pennsylvania.svg.png' },\n  { 'name': 'Rhode Island', 'flag': 'f/f3/Flag_of_Rhode_Island.svg/32px-Flag_of_Rhode_Island.svg.png' },\n  { 'name': 'South Carolina', 'flag': '6/69/Flag_of_South_Carolina.svg/45px-Flag_of_South_Carolina.svg.png' },\n  { 'name': 'South Dakota', 'flag': '1/1a/Flag_of_South_Dakota.svg/46px-Flag_of_South_Dakota.svg.png' },\n  { 'name': 'Tennessee', 'flag': '9/9e/Flag_of_Tennessee.svg/46px-Flag_of_Tennessee.svg.png' },\n  { 'name': 'Texas', 'flag': 'f/f7/Flag_of_Texas.svg/45px-Flag_of_Texas.svg.png' },\n  { 'name': 'Utah', 'flag': 'f/f6/Flag_of_Utah.svg/45px-Flag_of_Utah.svg.png' },\n  { 'name': 'Vermont', 'flag': '4/49/Flag_of_Vermont.svg/46px-Flag_of_Vermont.svg.png' },\n  { 'name': 'Virginia', 'flag': '4/47/Flag_of_Virginia.svg/44px-Flag_of_Virginia.svg.png' },\n  { 'name': 'Washington', 'flag': '5/54/Flag_of_Washington.svg/46px-Flag_of_Washington.svg.png' },\n  { 'name': 'West Virginia', 'flag': '2/22/Flag_of_West_Virginia.svg/46px-Flag_of_West_Virginia.svg.png' },\n  { 'name': 'Wisconsin', 'flag': '2/22/Flag_of_Wisconsin.svg/45px-Flag_of_Wisconsin.svg.png' },\n  { 'name': 'Wyoming', 'flag': 'b/bc/Flag_of_Wyoming.svg/43px-Flag_of_Wyoming.svg.png' }\n];\n\nconst WIKI_URL = 'https://en.wikipedia.org/w/api.php';\nconst PARAMS = new HttpParams({\n  fromObject: {\n    action: 'opensearch',\n    format: 'json',\n    origin: '*'\n  }\n});\n\n@Injectable()\nexport class WikipediaService {\n  constructor(private http: HttpClient) { }\n\n  search(term: string) {\n    if (term === '') {\n      return of([]);\n    }\n\n    return this.http\n      .get(WIKI_URL, { params: PARAMS.set('search', term) }).pipe(\n        map(response => response[1])\n      );\n  }\n}\n\n@Component({\n  selector: 'app-typeahead',\n  templateUrl: './typeahead.component.html',\n  styleUrls: ['./typeahead.component.scss'],\n  providers: [WikipediaService],\n})\n\nexport class TypeaheadComponent implements OnInit {\n\n  public model: any;\n  public modelFocus: any;\n  public modelWiki: any;\n  public modelTemp: any;\n  searching = false;\n  searchFailed = false;\n\n  @ViewChild('instance') instance: NgbTypeahead;\n  focus$ = new Subject<string>();\n  click$ = new Subject<string>();\n\n  constructor(private _service: WikipediaService) { }\n\n  ngOnInit() { }\n\n  search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      map(term => term.length < 2 ? []\n        : states.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    )\n\n  searchOnFocus = (text$: Observable<string>) => {\n    const debouncedText$ = text$.pipe(debounceTime(200), distinctUntilChanged());\n    const clicksWithClosedPopup$ = this.click$.pipe(filter(() => !this.instance.isPopupOpen()));\n    const inputFocus$ = this.focus$;\n\n    return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\n      map(term => (term === '' ? states\n        : states.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1)).slice(0, 10))\n    );\n  }\n\n  searchWikipedia = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      tap(() => this.searching = true),\n      switchMap(term =>\n        this._service.search(term).pipe(\n          tap(() => this.searchFailed = false),\n          catchError(() => {\n            this.searchFailed = true;\n            return of([]);\n          }))\n      ),\n      tap(() => this.searching = false)\n    )\n\n  searchTemp = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      map(term => term === '' ? []\n        : statesWithFlags.filter(v => v.name.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    )\n  formatter = (x: { name: string }) => x.name;\n}\n","<app-breadcrumb [title]=\"'Typeahead'\" [items]=\"['Bonus UI', 'Base']\" [active_item]=\"'Typeahead'\"></app-breadcrumb>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Simple Typeahead</h5>\n        </div>\n        <div class=\"card-body\">\n          A typeahead example that gets values from a static <code>string[]</code>\n          <ul>\n            <li><code>debounceTime</code> operator</li>\n            <li>kicks in only if 2+ characters typed</li>\n            <li>limits to 10 results</li>\n          </ul>\n          <label for=\"typeahead-basic\">Search for a state:</label>\n          <input id=\"typeahead-basic\" type=\"text\" class=\"form-control\" [(ngModel)]=\"model\" [ngbTypeahead]=\"search\" />\n          <hr>\n          <pre class=\"mb-0\">Model: {{ model | json }}</pre>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Open on focus</h5>\n        </div>\n        <div class=\"card-body\">\n          A typeahead example that gets values from a static <code>string[]</code>\n          <ul>\n            <li><code>debounceTime</code> operator</li>\n            <li>kicks in only if 2+ characters typed</li>\n            <li>limits to 10 results</li>\n          </ul>\n          <label for=\"typeahead-basic\">Search for a state:</label>\n          <input id=\"typeahead-basic\" type=\"text\" class=\"form-control\" [(ngModel)]=\"modelFocus\"\n            [ngbTypeahead]=\"searchOnFocus\" />\n          <hr>\n          <pre class=\"mb-0\">Model: {{ modelFocus | json }}</pre>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Wikipedia search</h5>\n        </div>\n        <div class=\"card-body\">\n          A typeahead example that gets values from the <code>WikipediaService</code>\n          <ul>\n            <li>remote data retrieval</li>\n            <li><code>debounceTime</code> operator</li>\n            <li><code>do</code> operator</li>\n            <li><code>distinctUntilChanged</code> operator</li>\n            <li><code>switchMap</code> operator</li>\n            <li><code>catch</code> operator to display an error message in case of connectivity issue</li>\n          </ul>\n          <div class=\"form-group\">\n            <label for=\"typeahead-http\">Search for a wiki page:</label>\n            <input id=\"typeahead-http\" type=\"text\" class=\"form-control\" [class.is-invalid]=\"searchFailed\"\n              [(ngModel)]=\"modelWiki\" [ngbTypeahead]=\"searchWikipedia\" placeholder=\"Wikipedia search\" />\n            <span *ngIf=\"searching\">searching...</span>\n            <div class=\"invalid-feedback\" *ngIf=\"searchFailed\">Sorry, suggestions could not be loaded.</div>\n          </div>\n          <hr>\n          <pre class=\"mb-0\">Model: {{ modelWiki | json }}</pre>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Template for results</h5>\n        </div>\n        <div class=\"card-body\">\n          <p>A typeahead example that uses a custom template for results display, an object as the model,\n            and the highlight directive to highlight the term inside the custom template.\n          </p>\n          <ng-template #rt let-r=\"result\" let-t=\"term\">\n            <img [src]=\"'https://upload.wikimedia.org/wikipedia/commons/thumb/' + r['flag']\" class=\"me-1\"\n              style=\"width: 16px\">\n            <ngb-highlight [result]=\"r.name\" [term]=\"t\"></ngb-highlight>\n          </ng-template>\n          <label for=\"typeahead-template\">Search for a state:</label>\n          <input id=\"typeahead-template\" type=\"text\" class=\"form-control\" [(ngModel)]=\"modelTemp\"\n            [ngbTypeahead]=\"searchTemp\" [resultTemplate]=\"rt\" [inputFormatter]=\"formatter\" />\n          <hr>\n          <pre class=\"mb-0\">Model: {{ modelTemp | json }}</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}