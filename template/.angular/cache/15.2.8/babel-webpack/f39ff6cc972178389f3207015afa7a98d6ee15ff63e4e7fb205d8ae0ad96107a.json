{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AdminGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(next, state) {\n    // Guard for user is login or not\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user || user === null) {\n      this.router.navigate([\"/auth/login\"]);\n      return true;\n    } else if (user) {\n      if (!Object.keys(user).length) {\n        this.router.navigate([\"/auth/login\"]);\n        return true;\n      }\n    }\n    return true;\n  }\n}\nAdminGuard.ɵfac = function AdminGuard_Factory(t) {\n  return new (t || AdminGuard)(i0.ɵɵinject(i1.Router));\n};\nAdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminGuard,\n  factory: AdminGuard.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AACA,SAAsBA,sBAAsB,EAAEC,mBAAmB,EAAEC,MAAM,QAAQ,iBAAiB;;;AAKlG,OAAM,MAAOC,UAAU;EACrBC,YAAmBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAW;EAEpCC,WAAW,CAACC,IAA4B,EAAEC,KAA0B;IAClE;IACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnD,IAAI,CAACJ,IAAI,IAAIA,IAAI,KAAK,IAAI,EAAE;MAC1B,IAAI,CAACJ,MAAM,CAACS,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACrC,OAAO,IAAI;KACZ,MAAM,IAAIL,IAAI,EAAE;MACf,IAAI,CAACM,MAAM,CAACC,IAAI,CAACP,IAAI,CAAC,CAACQ,MAAM,EAAE;QAC7B,IAAI,CAACZ,MAAM,CAACS,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;QACrC,OAAO,IAAI;;;IAGf,OAAO,IAAI;EACb;;;mBAhBWX,UAAU;AAAA;;SAAVA,UAAU;EAAAe,SAAVf,UAAU;EAAAgB,YAFT;AAAM","names":["ActivatedRouteSnapshot","RouterStateSnapshot","Router","AdminGuard","constructor","router","canActivate","next","state","user","JSON","parse","localStorage","getItem","navigate","Object","keys","length","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Sarai Quintanilla\\Documents\\GitHub\\FletesNacionales\\template\\src\\app\\shared\\guard\\admin.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(public router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    // Guard for user is login or not\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (!user || user === null) {\r\n      this.router.navigate([\"/auth/login\"]);\r\n      return true;\r\n    } else if (user) {\r\n      if (!Object.keys(user).length) {\r\n        this.router.navigate([\"/auth/login\"]);\r\n        return true;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}