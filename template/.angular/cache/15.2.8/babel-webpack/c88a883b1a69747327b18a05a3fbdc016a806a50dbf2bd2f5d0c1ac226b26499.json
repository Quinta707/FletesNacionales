{"ast":null,"code":"import { GoogleMap } from '@angular/google-maps';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../shared/components/breadcrumb/breadcrumb.component\";\nimport * as i3 from \"@angular/google-maps\";\nfunction GoogleMapComponent_map_marker_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"map-marker\", 14);\n  }\n  if (rf & 2) {\n    const marker_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"position\", marker_r2.position)(\"label\", marker_r2.label);\n  }\n}\nfunction GoogleMapComponent_map_marker_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"map-marker\", 15, 16);\n    i0.ɵɵlistener(\"mapClick\", function GoogleMapComponent_map_marker_20_Template_map_marker_mapClick_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const marker_r3 = restoredCtx.$implicit;\n      const _r4 = i0.ɵɵreference(1);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.openInfo(_r4, marker_r3.info));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const marker_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"position\", marker_r3.position)(\"label\", marker_r3.label)(\"title\", marker_r3.title)(\"options\", marker_r3.options);\n  }\n}\nconst _c0 = function () {\n  return [\"Apps\", \"Map\"];\n};\n// import { MouseEvent } from '@agm/core';\nexport class GoogleMapComponent {\n  constructor() {\n    this.marker1 = {\n      position: {\n        lat: 38.9987208,\n        lng: -77.2538699\n      }\n    };\n    this.marker2 = {\n      position: {\n        lat: 39.7,\n        lng: -76.0\n      }\n    };\n    this.marker3 = {\n      position: {\n        lat: 37.9,\n        lng: -76.8\n      }\n    };\n    this.markers5 = [this.marker1, this.marker2, this.marker3];\n    this.markers = [];\n    this.zoom = 2;\n  }\n  ngOnInit() {\n    const bangalore = {\n      lat: 12.97,\n      lng: 77.59\n    };\n    this.markers1.push({\n      position: {\n        lat: 12.97,\n        lng: 77.59\n      },\n      label: {\n        color: \"red\",\n        text: \"Arial\"\n      },\n      Option: {\n        draggable: true,\n        animation: google.maps.Animation.DROP,\n        zoomControl: false,\n        mapTypeControl: false,\n        streetViewControl: false,\n        fullscreenControl: false\n      }\n    });\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\n      zoom: 12,\n      center: bangalore\n    });\n    this.markers.push({\n      position: {\n        lat: 35.717,\n        lng: 139.731\n      },\n      label: {\n        color: \"black\",\n        text: \"Madrid\"\n      },\n      Option: {\n        draggable: true,\n        animation: google.maps.Animation.DROP\n      }\n    });\n    this.markers.push({\n      position: {\n        lat: 48.8615515,\n        lng: 2.3112233\n      },\n      label: {\n        color: \"black\",\n        text: \"Paris\"\n      }\n    });\n  }\n  ngAfterViewInit() {\n    const streetView = this.map.getStreetView();\n    streetView.setOptions({\n      position: {\n        lat: 38.9938386,\n        lng: -77.2515373\n      },\n      pov: {\n        heading: 70,\n        pitch: -10\n      }\n    });\n    streetView.setVisible(true);\n    const bounds = this.getBounds(this.markers);\n    this.map.googleMap.fitBounds(bounds);\n  }\n  getBounds(markers) {\n    let north;\n    let south;\n    let east;\n    let west;\n    for (const marker of markers) {\n      // set the coordinates to marker's lat and lng on the first run.\n      // if the coordinates exist, get max or min depends on the coordinates.\n      north = north !== undefined ? Math.max(north, marker.position.lat) : marker.position.lat;\n      south = south !== undefined ? Math.min(south, marker.position.lat) : marker.position.lat;\n      east = east !== undefined ? Math.max(east, marker.position.lng) : marker.position.lng;\n      west = west !== undefined ? Math.min(west, marker.position.lng) : marker.position.lng;\n    }\n    ;\n    const bounds = {\n      north,\n      south,\n      east,\n      west\n    };\n    return bounds;\n  }\n}\nGoogleMapComponent.ɵfac = function GoogleMapComponent_Factory(t) {\n  return new (t || GoogleMapComponent)();\n};\nGoogleMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GoogleMapComponent,\n  selectors: [[\"app-google-map\"]],\n  viewQuery: function GoogleMapComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(GoogleMap, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.map = _t.first);\n    }\n  },\n  decls: 30,\n  vars: 8,\n  consts: [[3, \"title\", \"items\", \"active_item\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-xl-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"map-js-height\"], [\"width\", \"100%\", \"height\", \"450px\", 3, \"zoom\"], [3, \"position\", \"label\", 4, \"ngFor\", \"ngForOf\"], [\"height\", \"500px\", \"width\", \"100%\", 3, \"zoom\"], [3, \"position\", \"label\", \"title\", \"options\", \"mapClick\", 4, \"ngFor\", \"ngForOf\"], [1, \"my-google-map\"], [\"height\", \"500px\", \"width\", \"100%\"], [3, \"position\", \"label\"], [3, \"position\", \"label\", \"title\", \"options\", \"mapClick\"], [\"markerElem\", \"\"]],\n  template: function GoogleMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-breadcrumb\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\");\n      i0.ɵɵtext(7, \"Map at a specified location with Marker\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"google-map\", 8);\n      i0.ɵɵtemplate(11, GoogleMapComponent_map_marker_11_Template, 1, 2, \"map-marker\", 9);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(12, \"div\", 3)(13, \"div\", 4)(14, \"div\", 5)(15, \"h5\");\n      i0.ɵɵtext(16, \"MultiLanguage Map\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 6)(18, \"div\", 7)(19, \"google-map\", 10);\n      i0.ɵɵtemplate(20, GoogleMapComponent_map_marker_20_Template, 2, 4, \"map-marker\", 11);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(21, \"div\", 3)(22, \"div\", 4)(23, \"div\", 5)(24, \"h5\");\n      i0.ɵɵtext(25, \"Street View\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 6)(27, \"div\", 7)(28, \"div\", 12);\n      i0.ɵɵelement(29, \"google-map\", 13);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"title\", \"Google Map\")(\"items\", i0.ɵɵpureFunction0(7, _c0))(\"active_item\", \"Google Map\");\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"zoom\", ctx.zoom);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.markers);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"zoom\", ctx.zoom);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.markers);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.BreadcrumbComponent, i3.GoogleMap, i3.MapMarker],\n  styles: [\"agm-map[_ngcontent-%COMP%] {\\n  height: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hcHBzL21hcC9nb29nbGUtbWFwL2dvb2dsZS1tYXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJhZ20tbWFwe1xuICAgIGhlaWdodDogNTAwcHhcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["GoogleMap","i0","GoogleMapComponent","constructor","position","lat","lng","marker1","marker2","marker3","markers","zoom","ngOnInit","bangalore","markers1","push","label","color","text","Option","draggable","animation","google","maps","Animation","DROP","zoomControl","mapTypeControl","streetViewControl","fullscreenControl","map","Map","document","getElementById","center","ngAfterViewInit","streetView","getStreetView","setOptions","pov","heading","pitch","setVisible","bounds","getBounds","googleMap","fitBounds","north","south","east","west","marker","undefined","Math","max","min","selectors","viewQuery"],"sourceRoot":"","sources":["F:\\Plantillas\\template\\src\\app\\components\\apps\\map\\google-map\\google-map.component.ts","F:\\Plantillas\\template\\src\\app\\components\\apps\\map\\google-map\\google-map.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MapMarker, GoogleMap, MapInfoWindow } from '@angular/google-maps';\n// import { MouseEvent } from '@agm/core';\n\n@Component({\n  selector: 'app-google-map',\n  templateUrl: './google-map.component.html',\n  styleUrls: ['./google-map.component.scss']\n})\n\nexport class GoogleMapComponent implements OnInit {\n\n  public markers: any[];\n  public markers1: any[];\n  public zoom: number;\n\n  constructor() {\n    this.markers = [];\n    this.zoom = 2;\n  }\n\n  ngOnInit() {\n    const bangalore = { lat: 12.97, lng: 77.59 };\n    this.markers1.push({\n      position: {\n        lat: 12.97,\n        lng: 77.59\n      },\n      label: {\n        color: \"red\",\n        text: \"Arial\"\n      },\n      Option:{\n        draggable: true,\n        animation: google.maps.Animation.DROP,\n        zoomControl: false,\n        mapTypeControl: false, \n        streetViewControl: false,\n        fullscreenControl: false\n      }\n      \n    })\n\n    const map = new google.maps.Map(\n      document.getElementById(\"map\") as HTMLElement,\n      {\n        zoom: 12,\n        center: bangalore,\n      }\n    );\n\n    this.markers.push({\n      position: {\n        lat: 35.717, \n        lng: 139.731 \n      },\n      label: {\n        color: \"black\",\n        text: \"Madrid\"\n      },\n      Option:{\n        draggable: true,\n        animation: google.maps.Animation.DROP,\n      }\n    });\n\n    this.markers.push({\n      position: {\n        lat: 48.8615515,\n        lng: 2.3112233\n      },\n      label: {\n        color: \"black\",\n        text: \"Paris\"\n      }\n    });\n  }\n\n  \n\n  //Street View\n  @ViewChild(GoogleMap) map!: GoogleMap;\n\n\n  ngAfterViewInit(){\n    const streetView = this.map.getStreetView();\n\n    streetView.setOptions({\n        position: { lat: 38.9938386, lng: -77.2515373 },\n        pov: { heading: 70, pitch: -10 },\n    });\n\n    streetView.setVisible(true);\n    const bounds = this.getBounds(this.markers);\n    this.map.googleMap.fitBounds(bounds);\n  }\n\n  marker1 = { position: { lat: 38.9987208, lng: -77.2538699 } };\n  marker2 = { position: { lat: 39.7, lng: -76.0 } };\n  marker3 = { position: { lat: 37.9, lng: -76.8 } };\n\n  markers5 = [this.marker1, this.marker2, this.marker3];\n\n\ngetBounds(markers){\n  let north;\n  let south;\n  let east;\n  let west;\n\n  for (const marker of markers){\n    // set the coordinates to marker's lat and lng on the first run.\n    // if the coordinates exist, get max or min depends on the coordinates.\n    north = north !== undefined ? Math.max(north, marker.position.lat) : marker.position.lat;\n    south = south !== undefined ? Math.min(south, marker.position.lat) : marker.position.lat;\n    east = east !== undefined ? Math.max(east, marker.position.lng) : marker.position.lng;\n    west = west !== undefined ? Math.min(west, marker.position.lng) : marker.position.lng;\n  };\n\n  const bounds = { north, south, east, west };\n\n  return bounds;\n}\n}\n\n","<app-breadcrumb [title]=\"'Google Map'\" [items]=\"['Apps', 'Map']\" [active_item]=\"'Google Map'\"></app-breadcrumb>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Map at a specified location with Marker</h5>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"map-js-height\">\n            <google-map width=\"100%\" height=\"450px\" [zoom]=\"zoom\">\n              <map-marker *ngFor=\"let marker of markers\" [position]=\"marker.position\" [label]=\"marker.label\">\n              </map-marker>\n            </google-map>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>MultiLanguage Map</h5>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"map-js-height\">\n            <google-map height=\"500px\" width=\"100%\" [zoom]=\"zoom\">\n              <map-marker #markerElem *ngFor=\"let marker of markers\" [position]=\"marker.position\" [label]=\"marker.label\"\n                [title]=\"marker.title\" [options]=\"marker.options\" (mapClick)=\"openInfo(markerElem, marker.info)\">\n              </map-marker>\n            </google-map>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-6\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5>Street View</h5>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"map-js-height\">\n            <div class=\"my-google-map\">\n              <google-map height=\"500px\" width=\"100%\"></google-map>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}