{"ast":null,"code":"import { ImageTransform, ImageCroppedEvent, Dimensions } from 'ngx-image-cropper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../shared/components/breadcrumb/breadcrumb.component\";\nimport * as i3 from \"../../../../shared/directives/only-numbers.directive\";\nimport * as i4 from \"ngx-image-cropper\";\nconst _c0 = function () {\n  return [\"Bonus UI\", \"Advance\"];\n};\nexport class ImageCroperComponent {\n  constructor() {\n    this.imageChangedEvent = '';\n    this.croppedImage = '';\n    this.canvasRotation = 0;\n    this.rotation = 0;\n    this.scale = 1;\n    this.showCropper = false;\n    this.containWithinAspectRatio = false;\n    this.transform = {};\n  }\n  fileChangeEvent(event) {\n    this.imageChangedEvent = event;\n  }\n  imageCropped(event) {\n    this.croppedImage = event.base64;\n  }\n  imageLoaded() {\n    this.showCropper = true;\n  }\n  cropperReady(sourceImageDimensions) {}\n  loadImageFailed() {}\n  rotateLeft() {\n    this.canvasRotation--;\n    this.flipAfterRotate();\n  }\n  rotateRight() {\n    this.canvasRotation++;\n    this.flipAfterRotate();\n  }\n  flipAfterRotate() {\n    const flippedH = this.transform.flipH;\n    const flippedV = this.transform.flipV;\n    this.transform = Object.assign(Object.assign({}, this.transform), {\n      flipH: flippedV,\n      flipV: flippedH\n    });\n  }\n  flipHorizontal() {\n    this.transform = Object.assign(Object.assign({}, this.transform), {\n      flipH: !this.transform.flipH\n    });\n  }\n  flipVertical() {\n    this.transform = Object.assign(Object.assign({}, this.transform), {\n      flipV: !this.transform.flipV\n    });\n  }\n  resetImage() {\n    this.scale = 1;\n    this.rotation = 0;\n    this.canvasRotation = 0;\n    this.transform = {};\n  }\n  zoomOut() {\n    this.scale -= .1;\n    this.transform = Object.assign(Object.assign({}, this.transform), {\n      scale: this.scale\n    });\n  }\n  zoomIn() {\n    this.scale += .1;\n    this.transform = Object.assign(Object.assign({}, this.transform), {\n      scale: this.scale\n    });\n  }\n  toggleContainWithinAspectRatio() {\n    this.containWithinAspectRatio = !this.containWithinAspectRatio;\n  }\n  updateRotation() {\n    this.transform = Object.assign(Object.assign({}, this.transform), {\n      rotate: this.rotation\n    });\n  }\n}\nImageCroperComponent.ɵfac = function ImageCroperComponent_Factory(t) {\n  return new (t || ImageCroperComponent)();\n};\nImageCroperComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ImageCroperComponent,\n  selectors: [[\"app-image-croper\"]],\n  decls: 39,\n  vars: 20,\n  consts: [[3, \"title\", \"items\", \"active_item\"], [1, \"container-fluid\"], [1, \"img-cropper\"], [1, \"row\"], [1, \"col-sm-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"format\", \"png\", 3, \"imageChangedEvent\", \"maintainAspectRatio\", \"containWithinAspectRatio\", \"aspectRatio\", \"resizeToWidth\", \"cropperMinWidth\", \"onlyScaleDown\", \"roundCropper\", \"canvasRotation\", \"transform\", \"alignImage\", \"imageCropped\", \"imageLoaded\", \"cropperReady\", \"loadImageFailed\"], [1, \"btn-showcase\"], [1, \"text-center\", \"my-2\"], [3, \"src\"], [1, \"image-cropper-btn\"], [\"placeholder\", \"Choose Your Image\", \"type\", \"file\", 1, \"btn\", \"btn-outline-primary\", 3, \"change\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"for\", \"rotation\", 1, \"col-form-label\"], [\"placeholder\", \"Rotation\", \"type\", \"text\", \"onlyNumbers\", \"\", 1, \"btn\", \"btn-outline-primary\", \"ms-2\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"]],\n  template: function ImageCroperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-breadcrumb\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h5\");\n      i0.ɵɵtext(8, \"Image Cropper\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"image-cropper\", 8);\n      i0.ɵɵlistener(\"imageCropped\", function ImageCroperComponent_Template_image_cropper_imageCropped_10_listener($event) {\n        return ctx.imageCropped($event);\n      })(\"imageLoaded\", function ImageCroperComponent_Template_image_cropper_imageLoaded_10_listener() {\n        return ctx.imageLoaded();\n      })(\"cropperReady\", function ImageCroperComponent_Template_image_cropper_cropperReady_10_listener($event) {\n        return ctx.cropperReady($event);\n      })(\"loadImageFailed\", function ImageCroperComponent_Template_image_cropper_loadImageFailed_10_listener() {\n        return ctx.loadImageFailed();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10);\n      i0.ɵɵelement(13, \"img\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 12)(15, \"input\", 13);\n      i0.ɵɵlistener(\"change\", function ImageCroperComponent_Template_input_change_15_listener($event) {\n        return ctx.fileChangeEvent($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\")(17, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ImageCroperComponent_Template_button_click_17_listener() {\n        return ctx.rotateLeft();\n      });\n      i0.ɵɵtext(18, \"Rotate left\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ImageCroperComponent_Template_button_click_19_listener() {\n        return ctx.rotateRight();\n      });\n      i0.ɵɵtext(20, \"Rotate right\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ImageCroperComponent_Template_button_click_21_listener() {\n        return ctx.flipHorizontal();\n      });\n      i0.ɵɵtext(22, \"Flip horizontal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ImageCroperComponent_Template_button_click_23_listener() {\n        return ctx.flipVertical();\n      });\n      i0.ɵɵtext(24, \"Flip vertical\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\")(26, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ImageCroperComponent_Template_button_click_26_listener() {\n        return ctx.toggleContainWithinAspectRatio();\n      });\n      i0.ɵɵtext(27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ImageCroperComponent_Template_button_click_28_listener() {\n        return ctx.resetImage();\n      });\n      i0.ɵɵtext(29, \"Reset image\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\")(31, \"label\", 15);\n      i0.ɵɵtext(32, \"Rotation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function ImageCroperComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.rotation = $event;\n      })(\"keyup\", function ImageCroperComponent_Template_input_keyup_33_listener() {\n        return ctx.updateRotation();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\")(35, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ImageCroperComponent_Template_button_click_35_listener() {\n        return ctx.zoomOut();\n      });\n      i0.ɵɵtext(36, \"Zoom -\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ImageCroperComponent_Template_button_click_37_listener() {\n        return ctx.zoomIn();\n      });\n      i0.ɵɵtext(38, \"Zoom +\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"title\", \"Image Croper\")(\"items\", i0.ɵɵpureFunction0(19, _c0))(\"active_item\", \"Image Croper\");\n      i0.ɵɵadvance(10);\n      i0.ɵɵstyleProp(\"display\", ctx.showCropper ? null : \"none\");\n      i0.ɵɵproperty(\"imageChangedEvent\", ctx.imageChangedEvent)(\"maintainAspectRatio\", true)(\"containWithinAspectRatio\", ctx.containWithinAspectRatio)(\"aspectRatio\", 4 / 3)(\"resizeToWidth\", 256)(\"cropperMinWidth\", 128)(\"onlyScaleDown\", true)(\"roundCropper\", false)(\"canvasRotation\", ctx.canvasRotation)(\"transform\", ctx.transform)(\"alignImage\", \"left\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"src\", ctx.croppedImage, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(14);\n      i0.ɵɵtextInterpolate1(\" \", ctx.containWithinAspectRatio ? \"Fill Aspect Ratio\" : \"Contain Within Aspect Ratio\", \" \");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.rotation);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i2.BreadcrumbComponent, i3.OnlyNumbersDirective, i4.ImageCropperComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["ImageTransform","ImageCroppedEvent","Dimensions","ImageCroperComponent","constructor","fileChangeEvent","event","imageChangedEvent","imageCropped","croppedImage","base64","imageLoaded","showCropper","cropperReady","sourceImageDimensions","loadImageFailed","rotateLeft","canvasRotation","flipAfterRotate","rotateRight","flippedH","transform","flipH","flippedV","flipV","flipHorizontal","flipVertical","resetImage","scale","rotation","zoomOut","zoomIn","toggleContainWithinAspectRatio","containWithinAspectRatio","updateRotation","rotate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\Plantillas\\template\\src\\app\\components\\bonus-ui\\advance\\image-croper\\image-croper.component.ts","F:\\Plantillas\\template\\src\\app\\components\\bonus-ui\\advance\\image-croper\\image-croper.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ImageTransform, ImageCroppedEvent, base64ToFile, Dimensions } from 'ngx-image-cropper';\n\n@Component({\n  selector: 'app-image-croper',\n  templateUrl: './image-croper.component.html',\n  styleUrls: ['./image-croper.component.scss']\n})\nexport class ImageCroperComponent {\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n  canvasRotation = 0;\n  rotation = 0;\n  scale = 1;\n  showCropper = false;\n  containWithinAspectRatio = false;\n  transform: ImageTransform = {};\n\n  fileChangeEvent(event: any): void {\n      this.imageChangedEvent = event;\n  }\n\n  imageCropped(event: ImageCroppedEvent) {\n      this.croppedImage = event.base64;\n  }\n\n  imageLoaded() {\n      this.showCropper = true;\n      \n  }\n\n  cropperReady(sourceImageDimensions: Dimensions) {\n  }\n\n  loadImageFailed() {\n  }\n\n  rotateLeft() {\n      this.canvasRotation--;\n      this.flipAfterRotate();\n  }\n\n  rotateRight() {\n      this.canvasRotation++;\n      this.flipAfterRotate();\n  }\n\n  private flipAfterRotate() {\n      const flippedH = this.transform.flipH;\n      const flippedV = this.transform.flipV;\n      this.transform = {\n          ...this.transform,\n          flipH: flippedV,\n          flipV: flippedH\n      };\n  }\n\n\n  flipHorizontal() {\n      this.transform = {\n          ...this.transform,\n          flipH: !this.transform.flipH\n      };\n  }\n\n  flipVertical() {\n      this.transform = {\n          ...this.transform,\n          flipV: !this.transform.flipV\n      };\n  }\n\n  resetImage() {\n      this.scale = 1;\n      this.rotation = 0;\n      this.canvasRotation = 0;\n      this.transform = {};\n  }\n\n  zoomOut() {\n      this.scale -= .1;\n      this.transform = {\n          ...this.transform,\n          scale: this.scale\n      };\n  }\n\n  zoomIn() {\n      this.scale += .1;\n      this.transform = {\n          ...this.transform,\n          scale: this.scale\n      };\n  }\n\n  toggleContainWithinAspectRatio() {\n      this.containWithinAspectRatio = !this.containWithinAspectRatio;\n  }\n\n  updateRotation() {\n      this.transform = {\n          ...this.transform,\n          rotate: this.rotation\n      };\n  }\n}","<app-breadcrumb [title]=\"'Image Croper'\" [items]=\"['Bonus UI', 'Advance']\" [active_item]=\"'Image Croper'\"></app-breadcrumb>\n<div class=\"container-fluid\">\n  <div class=\"img-cropper\">\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h5>Image Cropper</h5>\n          </div>\n          <div class=\"card-body\">\n            <image-cropper [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\"\n                  [containWithinAspectRatio]=\"containWithinAspectRatio\" [aspectRatio]=\"4 / 3\" [resizeToWidth]=\"256\"\n                  [cropperMinWidth]=\"128\" [onlyScaleDown]=\"true\" [roundCropper]=\"false\"\n                  [canvasRotation]=\"canvasRotation\" [transform]=\"transform\" [alignImage]=\"'left'\"\n                  [style.display]=\"showCropper ? null : 'none'\" format=\"png\" (imageCropped)=\"imageCropped($event)\"\n                  (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady($event)\"\n                  (loadImageFailed)=\"loadImageFailed()\">\n                </image-cropper>\n              <div class=\"btn-showcase\">\n                <div class=\"text-center my-2\">\n                  <img [src]=\"croppedImage\">\n                </div>\n                <div class=\"image-cropper-btn\">\n                  <input class=\"btn btn-outline-primary\" placeholder=\"Choose Your Image\" type=\"file\"\n                    (change)=\"fileChangeEvent($event)\" />\n                </div>\n                <div>\n                  <button class=\"btn btn-primary\" (click)=\"rotateLeft()\">Rotate left</button>\n                  <button class=\"btn btn-primary\" (click)=\"rotateRight()\">Rotate right</button>\n                  <button class=\"btn btn-primary\" (click)=\"flipHorizontal()\">Flip horizontal</button>\n                  <button class=\"btn btn-primary\" (click)=\"flipVertical()\">Flip vertical</button>\n                </div>\n                <div>\n                  <button class=\"btn btn-primary\" (click)=\"toggleContainWithinAspectRatio()\">\n                    {{containWithinAspectRatio?'Fill Aspect Ratio':'Contain Within Aspect Ratio'}}\n                  </button>\n                  <button class=\"btn btn-primary\" (click)=\"resetImage()\">Reset image</button>\n                </div>\n                <div>\n                  <label class=\"col-form-label\" for=\"rotation\">Rotation</label>\n                  <input class=\"btn btn-outline-primary ms-2\" [(ngModel)]=\"rotation\" placeholder=\"Rotation\"\n                    (keyup)=\"updateRotation()\" type=\"text\" onlyNumbers />\n                </div>\n                <div>\n                  <button class=\"btn btn-primary\" (click)=\"zoomOut()\">Zoom -</button>\n                  <button class=\"btn btn-primary\" (click)=\"zoomIn()\">Zoom +</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}