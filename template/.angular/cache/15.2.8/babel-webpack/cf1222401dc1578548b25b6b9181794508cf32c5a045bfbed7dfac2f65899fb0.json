{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DisableKeyPressDirective {\n  constructor() {\n    this.autocomplete = 'off';\n  }\n  disableKeys(event) {\n    event.preventDefault();\n  }\n}\nDisableKeyPressDirective.ɵfac = function DisableKeyPressDirective_Factory(t) {\n  return new (t || DisableKeyPressDirective)();\n};\nDisableKeyPressDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: DisableKeyPressDirective,\n  selectors: [[\"\", \"disableKeyPress\", \"\"]],\n  hostVars: 1,\n  hostBindings: function DisableKeyPressDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keypress\", function DisableKeyPressDirective_keypress_HostBindingHandler($event) {\n        return ctx.disableKeys($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete);\n    }\n  }\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,wBAAwB;EAInCC;IACE,IAAI,CAACC,YAAY,GAAG,KAAK;EAC3B;EAE6CC,WAAW,CAACC,KAAY;IACnEA,KAAK,CAACC,cAAc,EAAE;EACxB;;;mBAVWL,wBAAwB;AAAA;;QAAxBA,wBAAwB;EAAAM;EAAAC;EAAAC;IAAA;;eAAxBC,uBAAmB;MAAA","names":["DisableKeyPressDirective","constructor","autocomplete","disableKeys","event","preventDefault","selectors","hostVars","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Users\\Sarai Quintanilla\\Documents\\GitHub\\FletesNacionales\\template\\src\\app\\shared\\directives\\disable-key-press.directive.ts"],"sourcesContent":["import { Directive, HostListener, HostBinding } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[disableKeyPress]'\r\n})\r\nexport class DisableKeyPressDirective {\r\n\r\n  @HostBinding('autocomplete') public autocomplete;\r\n\r\n  constructor() {\r\n    this.autocomplete = 'off';\r\n  }\r\n\r\n  @HostListener('keypress', ['$event']) public disableKeys(event: Event) {\r\n    event.preventDefault();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}